{
    "id": 798,
    "description": "Given an array of N integers arr[] where each element represents the maximum length of the jump that can be made forward from that element. This means if arr[i] = x, then we can jump any distance y such that y \u2264 x.</br>\nFind the minimum number of jumps to reach the end of the array (starting from the first element). If an element is 0, then you cannot move through that element.\n\n**Note:** *Return -1 if you can't reach the end of the array.*\n\n#### `Your task:`\n```\nYou don't need to read input or print anything. Your task is to complete function minJumps() which takes the array arr and it's size N as input parameters and returns the minimum number of jumps. If not possible return -1.\n```\n#### `Example 1:`\n\n#### `Input:`\n```\nN = 11   \narr[] = {1, 3, 5, 8, 9, 2, 6, 7, 6, 8, 9}    \n```\n#### `Output: 3 `\n\n#### `Explanation: `\n```\nFirst jump from 1st element to 2nd  element with value 3. Now, from here we jump to 5th element with value 9, and from here we will jump to the last. \n```\n#### `Example 2:`\n\n#### `Input :`\n```\nN = 6\narr = {1, 4, 3, 2, 6, 7}\n```\n#### `Output: 2 `\n\n#### `Explanation: `\n`First we jump from the 1st to 2nd element and then jump to the last element.`\n\n\n#### `Constraints:`\n- `1 \u2264 N \u2264 10^7`\n- `0 \u2264 arr[i] \u2264 10^7`",
    "title": "Minimum jumps",
    "default_testcase": {
        "id": 7191,
        "input": "1\n11\n1 3 5 8 9 2 6 7 6 8 9",
        "expected_output": "3\n",
        "code_problem_id": 798,
        "created_at": "2024-04-05T10:05:07.634Z",
        "updated_at": "2024-04-05T10:05:07.634Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 2604,
            "code_problem_id": 798,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution{\n  public:\n    int minJumps(int v[], int n){\n      //Write your code here\n\n",
            "skeleton_class_end": "    }\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 2606,
            "code_problem_id": 798,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def minJumps(self, v, n):\n      #Write your code here\n",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 2620,
            "code_problem_id": 798,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public int minJumps(int[] v, int n) {\n      //Write your code here\n\n",
            "skeleton_class_end": "    }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 2621,
            "code_problem_id": 798,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    minJumps(v, n) {\n",
            "skeleton_class_end": "    }\n}",
            "skeleton_solution_class": ""
        }
    ]
}