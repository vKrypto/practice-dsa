{
    "id": 867,
    "description": "Patrick is analyzing binary strings and defines a substring of a binary string as \"good\" if it contains exactly one '1'. He is interested in finding how many binary strings 's' have the property that they contain exactly 'n' good substrings and no good substring is longer than 'k'. Note, substrings are considered distinct based on their position in the string even if they are identical in content.\n\n#### `Input format:`\n\n- `The input begins with an integer 't' (1 \u2264 t \u2264 2500), the number of test cases.`\n- `Each test case is described by a line containing two integers 'n' and 'k' (1 \u2264 n \u2264 2500, 1 \u2264 k \u2264 n) \u2014 'n' is the required number of good substrings and 'k' is the maximum length of any good substring.`\n\n#### Output format:`\n\n- `For each test case, output the number of binary strings 's' that meet the criteria, modulo 998244353.`\n\n#### Constraints:\n\n- `The sum of 'n' across all test cases will not exceed 2500.`\n\n#### `Examples:`\n\n#### `Input:`\n```\n6\n1 1\n3 2\n4 2\n5 4\n6 2\n2450 2391\n```\n#### Output:\n```\n1\n3\n5\n12\n9\n259280854\n```\n\n#### Explanation:\n\n- `In the first test case, the only binary string that contains exactly one good substring is \"1\". The string \"01\" is not valid because its good substring (\"1\") is longer than 'k=1'.`\n  \n- `For the second test case, suitable binary strings are \"011\", \"110\", and \"111\". These strings contain exactly three good substrings (\"0\" and \"1\" in \"011\" and \"110\", and three \"1\"s in \"111\"), and no good substring is longer than 'k=2'.`\n\n- `The remaining outputs represent the counts of valid binary strings for their respective test cases.`\n\n#### `Task:`\n```\nYou are to compute the count of valid binary strings for each test case, considering the constraints on the number and lengths of the good substrings, and provide the results modulo 998244353.\n```",
    "title": "Exact Good Substring Count",
    "default_testcase": null,
    "problem_type": "practice",
    "code_skeletons": []
}