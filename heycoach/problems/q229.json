{
    "id": 229,
    "description": "Given two strings `s` and `t`, return _the number of distinct_  **_subsequences_** _of_ `s` _which equals_ `t`.\nAs the answer can be very large return ans modulo 1000000007\n### Example 1 \n\n### Input\n```CPP\ns = \"rabbbit\", t = \"rabbit\"\n```\n### Output \n```CPP\n3\n```\n### Explanation\n\nAs shown below, there are 3 ways you can generate \"rabbit\" from s.\n**rabb**b**it**\n**ra**b**bbit**\n**rab**b**bit**\n\n**Example 2:**\n\n**Input:**\n```CPP\ns = \"babgbag\", t = \"bag\"\n```\n**Output:** \n```CPP\n5\n```\n### Explanation\nAs shown below, there are 5 ways you can generate \"bag\" from s.\n**ba**b**g**bag\n**ba**bgba**g**\n**b**abgb**ag**\nba**b**gb**ag**\nbabg**bag**\n\n\n### Constraints:\n-   `1 <= s.length, t.length <= 1000`\n-   `s`  and  `t`  consist of lowercase English letters.\n",
    "title": "Count equal subsequences",
    "default_testcase": {
        "id": 1632,
        "input": "rabbbit rabbit",
        "expected_output": "3",
        "code_problem_id": 229,
        "created_at": "2022-11-01T14:44:26.391Z",
        "updated_at": "2022-11-01T14:44:26.391Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 328,
            "code_problem_id": 229,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\npublic:\n    int numDistinct(string s, string t) {\n      // writr your code here\n    }\n};\n"
        }
    ]
}