{
    "id": 820,
    "description": "There are `n` plants in a park, numbered from `1` to `n`. The initial height of the `i-th` plant is `h[i]`.\nYou want to water these plants, so they all grow to the same **height**. The watering process goes as follows. You start watering plants at day `1`. During the `j-th` day you can:\n\nChoose a plant and water it. If the day is **odd** `(e.g. 1, 3,5, 7, .. .)`, then the **height** of the plant increases by `1`. If the day is **even** `(e.g. 2,4, 6, 8, ...)`, then the height of the plant increases by 2.\nOr skip a day without watering any plant.\n\n**Note:** that you can't water more than one plant in a day.\n\nYour task is to determine the **minimum** number of days required to water the plants so they grow to the same **height**.\n\n**Example**\n```\nInput : n = 3, h = [1,2,4]\n\nOutput : 4\n\nExplanation:\n\nThe initial state of the plants is [1,2,4] \n\n1. During the first day, let's water the first plants, so the sequence of heights becomes [2,2,4] ;\n2. During the second day, let's water the second plant, so the sequence of heights becomes [2,4,4] \n3. let's skip the third day;\n4. During the fourth day, let's water the first plant, so the sequence of heights becomes [4,4,4] .\n\nThus, the answer is 4\n```\n\n**Input Format**\n```\nThe first line contains one integer \u2014 the number of trees.\nThe second line contains n integers, where hi is the height of the i-th tree.\n```\n**Output Format**\n```\nSingle integer \u2014 the minimum number of days required to water the trees, so they grow to the same height.\n```\n**Constraints**\n\n`1 <= n <= 3 * 10^5`\n\n`1 <= h[i] <= 10^9`\n",
    "title": "Watering Plants in Park",
    "default_testcase": {
        "id": 7403,
        "input": "3\n1 2 4\n",
        "expected_output": "4\n",
        "code_problem_id": 820,
        "created_at": "2024-04-26T13:07:16.376Z",
        "updated_at": "2024-04-26T13:07:16.376Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 2666,
            "code_problem_id": 820,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution{\npublic:\n\nlong long WateringPlants(long long n, vector<long long>&h)\n{",
            "skeleton_class_end": "}\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 2667,
            "code_problem_id": 820,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    long WateringPlants(long n, List<Long> h) {\n \n\n",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 2668,
            "code_problem_id": 820,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def WateringPlants(self, n, h):",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 2669,
            "code_problem_id": 820,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "\n\nclass Solution {\n    WateringPlants(n, h) {",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        }
    ]
}