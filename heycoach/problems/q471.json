{
    "id": 471,
    "description": "Given the head of a singly linked list, determine whether it is a palindrome.\n\nA linked list is a palindrome if the sequence of values from the head to the end of the list reads the same backward as forward.\n\nConsequently, return true if the linked list is a palindrome, and false otherwise.\n\nThe number of nodes in the linked list is guaranteed to be in the range [1, 10^5], and the value of each node is in the range [0, 9].\n\n**Example 1:**\n\n**Input**: \n```\nhead = [1,2,2,1]\n```\n**Output**: \n```\ntrue\n```\n**Explanation**:</br>\nThe linked list represents the sequence [1, 2, 2, 1], which is a palindrome when read from left to right or right to left.\n\n**Example 2:**\n\n**Input**: \n```\nhead = [1,2]\n```\n**Output**: \n```\nfalse\n```\n**Explanation**:</br>\nThe linked list represents the sequence [1, 2], which is not a palindrome as it does not read the same backward as forward.\n\n",
    "title": "Palindromic linked list",
    "default_testcase": {
        "id": 3180,
        "input": "5\n1 2 2 2 1",
        "expected_output": "true\n",
        "code_problem_id": 471,
        "created_at": "2023-12-26T14:54:12.072Z",
        "updated_at": "2023-12-26T14:54:12.072Z"
    },
    "problem_type": "session_assignment",
    "code_skeletons": [
        {
            "id": 1315,
            "code_problem_id": 471,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "/*struct ListNode {\n    int val;\n    ListNode *next;\n    ListNode(int x) : val(x), next(nullptr) {}\n};*/\nclass Solution {\npublic:\n    bool isPalindrome(ListNode* head) {\n      //Write your code here\n   \n",
            "skeleton_class_end": "  }\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 1316,
            "code_problem_id": 471,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "'''class ListNode:\n    def __init__(self, x):\n        self.val = x\n        self.next = None'''\nclass Solution:\n    def isPalindrome(self, head: ListNode) -> bool:\n      #Write your code here\n      ",
            "skeleton_class_end": "",
            "skeleton_solution_class": "\n   \n\n"
        },
        {
            "id": 1317,
            "code_problem_id": 471,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "/*class ListNode {\n    constructor(x) {\n        this.val = x;\n        this.next = null;\n    }\n}*/\nclass Solution {\n    isPalindrome(head) {\n      //Write your code here\n       \n    ",
            "skeleton_class_end": "  }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 1318,
            "code_problem_id": 471,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "/*class ListNode {\n    int val;\n    ListNode next;\n    ListNode(int x) { val = x; }\n}*/\nclass Solution {\n    public boolean isPalindrome(ListNode head) {\n      //Write your code here\n       ",
            "skeleton_class_end": "  }\n}",
            "skeleton_solution_class": ""
        }
    ]
}