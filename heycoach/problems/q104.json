{
    "id": 104,
    "description": "You are given an integer array nums. Two players are playing a game with this array: player 1 and player 2.\n\nPlayer 1 and player 2 take turns, with player 1 starting first. Both players start the game with a score of 0. At each turn, the player takes one of the numbers from either end of the array (i.e., nums[0] or nums[nums.length - 1]) which reduces the size of the array by 1. The player adds the chosen number to their score. The game ends when there are no more elements in the array.\n\nReturn 1 if Player 1 can win the game. If the scores of both players are equal, then player 1 is still the winner, and you should also return 1. You may assume that both players are playing optimally.\n\nInput Format:\n\nFirst line represents a single integer representing the size of the array.\n\nSecond line takes n number of integers as input as elements of the array.\n\nOutput format:\n\nReturn true if player 1 wins else return false.\n\n### Example 1 \n\n### Input\n```CPP\n nums = [1,5,2]\n``` \n### Output \n```CPP \n0\n``` \n#### Explanation:\nInitially, player 1 can choose between 1 and 2. \nIf he chooses 2 (or 1), then player 2 can choose from 1 (or 2) and 5. If player 2 chooses 5, then player 1 will be left with 1 (or 2). \nSo, final score of player 1 is 1 + 2 = 3, and player 2 is 5. \nHence, player 1 will never be the winner and you need to return false.\n\n\n\n\n### Example 2 \n\n### Input\n```CPP\n nums = [1,5,233,7]\n``` \n### Output \n```CPP \n1\n``` \n#### Explanation:\nPlayer 1 first chooses 1. Then player 2 has to choose between 5 and 7. No matter which number player 2 choose, player 1 can choose 233.\nFinally, player 1 has more score (234) than player 2 (12), so you need to return True representing player1 can win.\n\n### Constraints:\n\n* 1 <= nums.length <= 20\n* 0 <= nums[i] <= 10^7",
    "title": "Find the Winner",
    "default_testcase": {
        "id": 6392,
        "input": "4 \n2 5 233 7",
        "expected_output": "1\n",
        "code_problem_id": 104,
        "created_at": "2024-03-12T21:52:10.860Z",
        "updated_at": "2024-03-12T21:52:10.860Z"
    },
    "problem_type": "level_test",
    "code_skeletons": [
        {
            "id": 261,
            "code_problem_id": 104,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution {\n  public:\n  bool PredictTheWinner(vector < int > & num) {\n    //Write your code here;",
            "skeleton_class_end": "}\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 274,
            "code_problem_id": 104,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    boolean predictTheWinner(int[] num) {\n      //Write your code here;",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": "\n"
        },
        {
            "id": 281,
            "code_problem_id": 104,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def __init__(self):\n        self.dp = None\n\n    def predictTheWinner(self, num):\n       #write your code here;",
            "skeleton_class_end": null,
            "skeleton_solution_class": "\n        \n"
        },
        {
            "id": 610,
            "code_problem_id": 104,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    constructor() {\n        this.dp = [];\n    }\n\n    predictTheWinner(num) {\n      //Write your code here\n      //Write your code here;",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        }
    ]
}