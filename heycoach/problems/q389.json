{
    "id": 389,
    "description": "**Problem Description: Max Tasks Done**\n\nRaman is going through a very rough phase in his life, and he is determined to earn as much money as possible. He comes across a job where he is allowed to solve as many problems as he can. The problems are given in the form of two arrays of size N, containing the starting and ending day of each problem. Help Raman maximize the number of problems he can solve.\n\n**Input:**\n- The first line contains an integer, N (1 \u2264 N \u2264 2*10^5), representing the number of problems.\n- The next two lines contain two arrays of size N each:\n  - The first array contains the starting day of each problem, where 1 \u2264 start[i] \u2264 10^9.\n  - The second array contains the ending day of each problem, where 1 \u2264 end[i] \u2264 10^9.\n\n**Output:**\n- Output a single integer representing the maximum number of problems Raman can solve.\n\n**Example:**\n```\nInput:\n5\n1 2 3 4 5\n3 4 5 6 7\n\nOutput:\n3\n\nExplanation:\nRaman can solve the problems starting on days 1, 3, and 5, and finish on days 3, 5, and 7, respectively. Therefore, the maximum number of problems he can solve is 3.\n```\n\n**Constraints:**\n- 1 \u2264 N \u2264 2*10^5\n- 1 \u2264 start[i] \u2264 end[i] \u2264 10^9",
    "title": "Activity Selection",
    "default_testcase": {
        "id": 7040,
        "input": "4\n1 2 3 6\n3 5 9 8",
        "expected_output": "2\n",
        "code_problem_id": 389,
        "created_at": "2024-03-29T12:33:14.651Z",
        "updated_at": "2024-03-29T12:33:14.651Z"
    },
    "problem_type": "session_assignment",
    "code_skeletons": [
        {
            "id": 923,
            "code_problem_id": 389,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    solve(start, end, n) {\n      //Write your code here",
            "skeleton_class_end": "  }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 1052,
            "code_problem_id": 389,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution{\n    public:\n    int solve(vector<int> start, vector<int> end, int n){\n      //Write your Solution here\n",
            "skeleton_class_end": "    }\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 1053,
            "code_problem_id": 389,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n  int solve(List<Integer> start, List<Integer> end, int n) {\n    //Write your code here",
            "skeleton_class_end": "  }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 1054,
            "code_problem_id": 389,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def solve(self, start, end, n):\n        #Write your code here",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        }
    ]
}