{
    "id": 463,
    "description": "Vijay is playing a train game which involves cites and underground paths. The cities are represented by a and the underground paths are represented by b.  Vijay's score at the start of the game is 0.  The game goes in a flow that whenever the train passes from an undergound path the score for the player increases by p which is a profit. The profit could be both positive profit or negative loss. That means p can be both positve and negative. The train in the game can pass through several underground paths.\nThe player task is to reach from city 1 to city n. Then what is the maximum profit the player can get?\n\n### Input Format\n```\nThe first input line has two integers a and b : which represents the number of cities and the number underground paths.\n\nThe cities range from 1 to n , which are 1 , 2, 3, 4 ,5......n\n\nThen there are b number of lines describing the underground paths. Each line contains of three integers the n , m and p :  n represents the start of the city and m represents the end of the city , and p reprsents the profit which increases.\n\nNote: All the underground paths are only for one way.\n\nThe train can able to travel from city 1 to city n.\n```\n### Output Format\n```\nThe output will be the maximum points the player can achieve in the game by travelling from one city to the nth city.\n```\n\n### Sample Input 1\n\n```\n4 4\n1 2 3\n2 4 -1\n1 3 -2\n3 4 7\n```\n### Sample Output 1\n\n```\n5\n```\n### Explanation\n\n```\nStarting at underground path 1 (initial points are 0) , the player have different paths to reach the city 4\n\nfor the first path (1->2->4):\n\nunderground path1 : +3\n\nunderground path2 : -1\n\nTotal points : 3 - 1 = 2\n\nfor the second path ( 1->3->4)\n\nunderground path3 : -2 \n\nunderground path4 : 7\n\nTotal points : -2+7=5\n\nThe second path (1->3->4) results maximum profits / points which 5 this the answer.\n \n```\n\n### Constraints\n```\n1 <= a<= 2500\n1 <= b<= 5000\n1<=  n, m <=a\n-10^9 <= p <= 10^9\n```\n\n",
    "title": "Path for a Train",
    "default_testcase": {
        "id": 3190,
        "input": "4 5\n1 2 4\n2 4 -1\n1 3 5\n3 4 4 \n1 4 -3",
        "expected_output": "9\n",
        "code_problem_id": 463,
        "created_at": "2023-12-27T06:49:37.113Z",
        "updated_at": "2023-12-27T06:49:37.113Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 1323,
            "code_problem_id": 463,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "Class Solution{\npublic static long findShortestPath(int N, int M) {\n // write your code \n  }\n}\n"
        }
    ]
}