{
    "id": 253,
    "description": "\nGiven an integer array nums and an integer k, return the length of the shortest non-empty `subarray` of nums with a sum of at least k. If there is no such subarray, return -1.\n\nA `subarray` is a contiguous part of an array.\n### Example 1 \n\n### Input\n```CPP\n nums = [1], k = 1\n``` \n### Output \n```CPP \n1\n``` \n\n### Example 2 \n\n### Input\n```CPP\n nums = [2,-1,2], k = 3\n``` \n### Output \n```CPP \n3\n``` \n\n\n\n\n\n\n\n### Constraints:\n\n* 1 <= nums.length <= 10^5\n* -10^5 <= nums[i] <= 10^5\n* 1 <= k <= 10^9\n",
    "title": "K sum",
    "default_testcase": {
        "id": 1767,
        "input": "42 20\n 6\n 9\n 4\n 5\n 6\n 2\n 1\n 4\n 9\n 8\n 7\n 4\n12\n 4\n 2\n 3\n 6\n 5\n 4\n 1\n 2\n 3\n 6\n 5\n 4\n 1\n 2\n 3\n 6\n 5\n 4\n12\n 3\n65\n 9\n 8\n 7\n 4\n 5\n 2\n 1\n 4\n",
        "expected_output": "1",
        "code_problem_id": 253,
        "created_at": "2022-11-05T17:47:59.012Z",
        "updated_at": "2022-11-05T17:47:59.012Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 451,
            "code_problem_id": 253,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\npublic:\n    int shortestSubarray(vector < int > & nums, int k) {\n      // write your code here  \n    }\n};\n"
        }
    ]
}