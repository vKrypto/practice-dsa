{
    "id": 159,
    "description": "Given an array nums of distinct integers, return all the possible * permutations *. You can return the answer in lexiographical order.\n#### Input Format:\n* first line contains single integer n (size of the array)\n* second line contains n integers (elements of the array)\n\n#### Output Format:\n* print the all the permutations in new line\n* elements of the permutation single space separated\n\n**Example**:\n**Input**:\n\n- 3\n- 1 2 3\n\n**Output**:\n\n- 1 2 3\n- 1 3 2\n- 2 1 3\n- 2 3 1\n- 3 1 2\n- 3 2 1\n\n**Explanation**:\n\n- The input array is [1, 2, 3].\n- The possible permutations are all the different ways to arrange these numbers.\n- Each line in the output represents a unique permutation.\n- The order of permutations in the output can be in any order.\n\n#### Constraints:\n* 1 <= nums.length <= 6\n* -10 <= nums[i] <= 10\n* All the integers of nums are unique.",
    "title": "Permutations",
    "default_testcase": null,
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 170,
            "code_problem_id": 159,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\npublic:\n  \n    vector<vector<int>> permute(vector<int>& nums) {\n      \n    }\n};\n"
        },
        {
            "id": 179,
            "code_problem_id": 159,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "\nclass Permutations {\n    static List<List<Integer>> permute(int[] nums) {\n      \n    }\n}\n"
        },
        {
            "id": 187,
            "code_problem_id": 159,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Permutations:\n    def permute(nums):\n       \n\n   "
        },
        {
            "id": 1016,
            "code_problem_id": 159,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\n    permute(nums) {\n        \n    }\n}\n"
        }
    ]
}