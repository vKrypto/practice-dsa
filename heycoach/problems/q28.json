{
    "id": 28,
    "description": "You are given a 0-indexed integer array mapping which represents the mapping rule of a shuffled decimal system. mapping[i] = j means digit i should be mapped to digit j in this system.\n\nThe `mapped value` of an integer is the new integer obtained by replacing each occurrence of digit i in the integer with mapping[i] for all 0 <= i <= 9.\n\nYou are also given another integer array nums. Return the array nums sorted in `non-decreasing` order based on the `mapped values` of its elements.\n\n#### Notes:\n\n* Elements with the same mapped values should appear in the `same relative order` as in the input.\n* The elements of nums should only be sorted based on their mapped values and not be replaced by them.\n\n### Example 1 \n\n### Input\n```CPP\nmapping = [8,9,4,0,2,1,3,5,7,6], nums = [991,338,38]\n``` \n### Output \n```CPP \n[338,38,991]\n``` \n#### Explanation:\nMap the number 991 as follows:\n1. mapping[9] = 6, so all occurrences of the digit 9 will become 6.\n2. mapping[1] = 9, so all occurrences of the digit 1 will become 9.\nTherefore, the mapped value of 991 is 669.\n338 maps to 007, or 7 after removing the leading zeros.\n38 maps to 07, which is also 7 after removing leading zeros.\nSince 338 and 38 share the same mapped value, they should remain in the same relative order, so 338 comes before 38.\nThus, the sorted array is [338,38,991]. \n\n\n\n\n### Example 2 \n\n### Input\n```CPP\nmapping = [0,1,2,3,4,5,6,7,8,9], nums = [789,456,123]\n``` \n### Output \n```CPP \n[123,456,789]\n``` \n#### Explanation:\n789 maps to 789, 456 maps to 456, and 123 maps to 123. Thus, the sorted array is [123,456,789].\n\n### Constraints:\n\n* mapping.length == 10\n* 0 <= mapping[i] <= 9\n* All the values of mapping[i] are `unique`.\n* 1 <= nums.length <= 3 * 10^4\n* 0 <= nums[i] < 10^9\n",
    "title": "Sort the Number",
    "default_testcase": null,
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 393,
            "code_problem_id": 28,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "\nclass Solution {\npublic:\n  void solve(vector<int> &mappings,vector<int> &nums) {\n    \n  } \n};\n"
        },
        {
            "id": 400,
            "code_problem_id": 28,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "\nclass Solution {\n  public void sortnumber(Vector<Integer> arr1,Vector<Integer> arr2) {\n    \n  } \n}\n"
        },
        {
            "id": 407,
            "code_problem_id": 28,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution:\n    def solve(self, arr1, arr2):\n        pass\n"
        }
    ]
}