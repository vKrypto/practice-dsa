{
    "id": 110,
    "description": "You are given an integer array nums where the ith bag contains nums[i] balls. You are also given an integer `mx`.\n\nYou can perform the following operation at most maxOperations times:\n\n* Take any bag of balls and divide it into two new bags with a positive number of balls.\nFor example, a bag of 5 balls can become two new bags of 1 and 4 balls, or two new bags of 2 and 3 balls.\nYour penalty is the maximum number of balls in a bag. You want to minimize your penalty after the operations.\n\nReturn the minimum possible penalty after performing the operations.\n\n### Example 1 \n\n### Input\n```CPP\nnums = [9], maxOperations = 2\n``` \n### Output \n```CPP \n3\n``` \n#### Explanation:\n- Divide the bag with 9 balls into two bags of sizes 6 and 3. [9] -> [6,3].\n- Divide the bag with 6 balls into two bags of sizes 3 and 3. [6,3] -> [3,3,3].\nThe bag with the most number of balls has 3 balls, so your penalty is 3 and you should return 3.\n\n\n### Example 2 \n\n### Input\n```CPP\nnums = [2,4,8,2], maxOperations = 4\n``` \n### Output \n```CPP \n2\n``` \n#### Explanation:\n- Divide the bag with 8 balls into two bags of sizes 4 and 4. [2,4,8,2] -> [2,4,4,4,2].\n- Divide the bag with 4 balls into two bags of sizes 2 and 2. [2,4,4,4,2] -> [2,2,2,4,4,2].\n- Divide the bag with 4 balls into two bags of sizes 2 and 2. [2,2,2,4,4,2] -> [2,2,2,2,2,4,2].\n- Divide the bag with 4 balls into two bags of sizes 2 and 2. [2,2,2,2,2,4,2] -> [2,2,2,2,2,2,2,2].\nThe bag with the most number of balls has 2 balls, so your penalty is 2 an you should return 2.\n\n\n### Constraints:\n\n* 1 <= nums.length <= 10^5\n* 1 <= maxOperations, nums[i] <= 10^9\n\n",
    "title": "Minimum Limit of Balls in a Bag",
    "default_testcase": null,
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 390,
            "code_problem_id": 110,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "\nclass Solution {\npublic:\n  void solve(vector<int> &arr,int mx) {\n    \n  } \n};\n"
        },
        {
            "id": 397,
            "code_problem_id": 110,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "\nclass Solution {\n  public void solve(Vector<Integer> arr,int k) {\n    \n  } \n}\n"
        },
        {
            "id": 404,
            "code_problem_id": 110,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution:\n    def solve(self, arr, k):\n        pass\n"
        }
    ]
}