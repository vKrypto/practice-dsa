{
    "id": 12,
    "description": "A boy Bholu likes to draw. Not long ago he bought a rectangular graph (checked) sheet with n rows and m columns. Bholu shaded some of the squares on the sheet. Having seen his masterpiece, he decided to share it with his elder brother, who lives in Chennai. Now Bholu has to send his picture by post, but because of the India's economic crisis and high oil prices, he wants to send his creation, but to spend as little money as possible. For each sent square of paper (no matter whether it is shaded or not) Bholu has to pay 20 rupee. Please, help Bholu cut out of his masterpiece a rectangle of the minimum cost, that will contain all the shaded squares. The rectangle's sides should be parallel to the sheet's sides.\n\nInput\nThe first line of the input data contains numbers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u200950), n \u2014 amount of lines, and m \u2014 amount of columns on Bholu's sheet. The following n lines contain m characters each. Character \u00ab.\u00bb stands for a non-shaded square on the sheet, and \u00ab*\u00bb \u2014 for a shaded square. It is guaranteed that Bholu has shaded at least one square.\n\nOutput\nOutput the required rectangle of the minimum cost. Study the output data in the sample tests to understand the output format better.",
    "title": "Message",
    "default_testcase": null,
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 12,
            "code_problem_id": 12,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\npublic:\n\tvoid solve(int n, int m, vector<vector<char>> &matrix) {\n\n\t}\n};"
        },
        {
            "id": 13,
            "code_problem_id": 12,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\n  public void solve(int n, int m, Vector<Vector<Character>> matrix) {\n  }\n}"
        },
        {
            "id": 14,
            "code_problem_id": 12,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "def solve(self, n, m, matrix):\n    pass"
        }
    ]
}