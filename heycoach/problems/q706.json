{
    "id": 706,
    "description": "You have to sort the string `s` in `decreasing order` based on the `frequency` of the characters. \nReturn the sorted string. if frequency of two character are same then sort in alphabetical order.\n### Example 1 \n\n### Input\n```CPP\ns = \"tree\"\n``` \n### Output \n```CPP \n\"eert\"\n``` \n#### Explanation:\n 'e' appears twice while 'r' and 't' both appear once.\nSo 'e' must appear before both 'r' and 't'.  \"eetr\" is not a valid answer as r appears before t.\n\n### Example 2 \n\n### Input\n```CPP\n s = \"cccaaa\"\n``` \n### Output \n```CPP \n\"aaaccc\"\n``` \n#### Explanation:\nBoth 'c' and 'a' appear three times, so \"aaaccc\" is valid answer.\nNote that \"cccaaa\" is not a valid answer as both 'c' and 'a' appear three times but a comes before c in dictionary.\nNote that \"cacaca\" is incorrect, as the same characters must be together.\n\n### Example 3\n\n### Input\n```CPP\n s = \"aA\"\n``` \n### Output \n```CPP \n\"Aa\"\n``` \n\n\n### Constraints:\n\n* 1 <= s.length <= 5 * 10^5\n* s consists of uppercase and lowercase English letters and digits.\n",
    "title": "Sort the Array",
    "default_testcase": {
        "id": 4651,
        "input": "tree",
        "expected_output": "eert\n",
        "code_problem_id": 706,
        "created_at": "2024-01-28T07:42:37.205Z",
        "updated_at": "2024-01-28T07:42:37.205Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 2221,
            "code_problem_id": 706,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution {\npublic:\n    std::string frequencySort(const std::string& s) {",
            "skeleton_class_end": "}\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 2222,
            "code_problem_id": 706,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n  public String frequencySort(String s) {",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 2223,
            "code_problem_id": 706,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def frequencySort(self, s: str) -> str:",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 2226,
            "code_problem_id": 706,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "\nclass Solution {\n    frequencySort(s) {",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        }
    ]
}