{
    "id": 672,
    "description": "You are given a sorted array consisting of only integers where every element appears exactly twice, except for one element which appears exactly once.\n\nPrint the single element that appears only once.\n\nYour solution must run in O(log n) time and O(1) space.  \n#### Example \n##### Input \n\n```\n9\n1 1 2 3 3 4 4 8 8\n```\n\n##### Output \n`2`\n##### Input Format:  \n\n```\nfirst line contains n the size of the array\nsecond line contains n elements of the array.\n```\n\n##### Output Format:  \n`Print the single appeared number`\n\n##### Constraints :  \n\n```\n1<=n<=1000  \n1<=arr[i]<=10000  \n0<=i<=n-1\n```",
    "title": "once in a sorted array",
    "default_testcase": {
        "id": 4433,
        "input": "3\n2 2 4",
        "expected_output": "4",
        "code_problem_id": 672,
        "created_at": "2024-01-27T15:40:35.371Z",
        "updated_at": "2024-01-27T15:40:35.371Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 2084,
            "code_problem_id": 672,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "\nclass Solution {\npublic:\n    int onceInASortedArray(vector<int>& arr) {\n",
            "skeleton_class_end": "    }\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 2085,
            "code_problem_id": 672,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public int onceInASortedArray(List<Integer> arr) {",
            "skeleton_class_end": "    }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 2086,
            "code_problem_id": 672,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n\n    def singleNonDuplicate(self, nums: List[int]) -> int:",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 2087,
            "code_problem_id": 672,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n  singleNonDuplicate(nums) {\n    ",
            "skeleton_class_end": "    }\n}",
            "skeleton_solution_class": ""
        }
    ]
}