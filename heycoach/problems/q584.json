{
    "id": 584,
    "description": "Given an integer array nums, return the maximum difference between two successive elements in its sorted form. If the array contains less than two elements, return 0.\n\nYou must write an algorithm that runs in linear time and uses linear extra space.\n\n \n\n**`Example 1:`**\n\n**`Input:`** \n`nums = [3,6,9,1]  `  \n**`Output: 3  `**\n**`Explanation:`** `The sorted form of the array is [1,3,6,9], either (3,6) or (6,9) has the maximum difference 3. ` \n\n**`Example 2:`**   \n**`Input:`**  \n`nums = [10]  `  \n**`Output:`**   \n`0`  \n**` Explanation:`** \n\n```\nThe array contains less than 2 elements and, therefore returns 0.\n\n```\n \n\n**`Constraints:`**\n\n- `1 <= nums.length <= 10^5  `\n- `0 <= nums[i] <= 10^9`",
    "title": "Maximum Gap",
    "default_testcase": {
        "id": 3849,
        "input": "4\n3 6 9 1",
        "expected_output": "3",
        "code_problem_id": 584,
        "created_at": "2024-01-21T15:34:59.876Z",
        "updated_at": "2024-01-21T15:34:59.876Z"
    },
    "problem_type": "session_assignment",
    "code_skeletons": [
        {
            "id": 1735,
            "code_problem_id": 584,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution {\n    public:\nint maximumGap(vector<int>& nums) {\n ",
            "skeleton_class_end": "}};",
            "skeleton_solution_class": ""
        },
        {
            "id": 1737,
            "code_problem_id": 584,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "\n class Solution {\npublic int maximumGap(int[] arr) {\n",
            "skeleton_class_end": "}}",
            "skeleton_solution_class": ""
        },
        {
            "id": 1738,
            "code_problem_id": 584,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def maximumGap(self, nums):\n",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 1739,
            "code_problem_id": 584,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    static maxgap(nums) {\n",
            "skeleton_class_end": "}}",
            "skeleton_solution_class": ""
        }
    ]
}