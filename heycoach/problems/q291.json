{
    "id": 291,
    "description": "Given a `m x n` grid filled with non-negative numbers, A explorer is at top left cell and he has to  find a path from top left to bottom right, but there is a condition he has to pay an amount equal to the cell if he choose to include a particular cell in his path, suggest a path  which minimizes the money paid by the explorer\n\n**Example**\n```\nInput: grid = [[1,3,1],[1,5,1],[4,2,1]]\n\nOutput: 7\n```\n\n\n`Note: You can only move either down or right at any point in time.`\n\n**Constraints:**\n\n`m == grid.length`\n\n`n == grid[i].length`\n\n`1 <= m, n <= 200`\n\n`0 <= grid[i][j] <= 200`\n\n",
    "title": "MIN TAX PAID_I",
    "default_testcase": {
        "id": 1940,
        "input": "2 3\n5 9 2\n11 5 6",
        "expected_output": "22",
        "code_problem_id": 291,
        "created_at": "2023-09-15T19:02:26.473Z",
        "updated_at": "2023-09-15T19:02:26.473Z"
    },
    "problem_type": "session_assignment",
    "code_skeletons": [
        {
            "id": 715,
            "code_problem_id": 291,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution{\npublic:\n      int mintaxpaid_I(vector<vector<int> > &matrix){\n\n  //Write your code ehre;",
            "skeleton_class_end": "}\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 716,
            "code_problem_id": 291,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n     mintaxpaid_I(matrix) {       \n      //Wite your code here;",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 717,
            "code_problem_id": 291,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def mintaxpaid_I(self, matrix):\n\n      #Write your code here;",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 718,
            "code_problem_id": 291,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public int mintaxpaid_I(int[][] matrix) {\n      //Write your code here",
            "skeleton_class_end": "\n}",
            "skeleton_solution_class": ""
        }
    ]
}