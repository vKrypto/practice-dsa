{
    "id": 498,
    "description": "You are given a list nums that initially contains a single value 0. Below are Q queries of the following types:\n\n0 X: Insert X in the list.</br>\n1 X: For every element A in nums, replace it by A XOR X.</br>\nReturn the list in increasing order after performing the given Q queries.\n\n**Input**:</br>\n**Q (1 \u2264 Q \u2264 10^5):** An integer representing the number of queries.</br>\n**queries (1 \u2264 Length of queries \u2264 Q):** A list of tuples, where each tuple contains two integers:</br>\nThe first integer represents the type of query (0 or 1).</br>\nThe second integer represents the value X.</br>\n\n**Output**:</br>\nReturns a list of integers  in sorted order representing the final list after performing the given queries.\n\n**Example**:</br>\n```\nQ = 5\nqueries = [(0, 3), (1, 2), (0, 5), (1, 10), (1, 3)]\n```\n**output**  \n```\n[8,11,12]\nThe initial list is [0].\nAfter the first query (0, 3), the list becomes [0, 3].\nAfter the second query (1, 2), XOR each element with 2: [2, 1].\nAfter the third query (0, 5), the list becomes [2, 1, 5].\nAfter the fourth query (1, 10), XOR each element with 10: [8, 11, 15].\nAfter the fifth query (1, 3), XOR each element with 3: [11, 8, 12].\n```",
    "title": "XOR Operations on a List",
    "default_testcase": {
        "id": 8072,
        "input": "5\n0 3\n1 2\n0 5\n1 10\n1 3",
        "expected_output": "8 11 12 \n",
        "code_problem_id": 498,
        "created_at": "2024-05-19T07:41:26.658Z",
        "updated_at": "2024-05-19T07:41:26.658Z"
    },
    "problem_type": "session_assignment",
    "code_skeletons": [
        {
            "id": 1458,
            "code_problem_id": 498,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution{\n    public:\n    vector<int> constructList(vector<vector<int>> Q, int N) {\n      //Write your code here",
            "skeleton_class_end": "    }\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 1459,
            "code_problem_id": 498,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution{\n    List<Integer> constructList(List<List<Integer>> Q, int N) {\n      //Write your code here",
            "skeleton_class_end": "    }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 1460,
            "code_problem_id": 498,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def construct_list(self, Q, N):\n      #Write your code here",
            "skeleton_class_end": null,
            "skeleton_solution_class": ""
        },
        {
            "id": 1461,
            "code_problem_id": 498,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    constructList(Q, N) {\n      //Write your code here",
            "skeleton_class_end": "    }\n}",
            "skeleton_solution_class": ""
        }
    ]
}