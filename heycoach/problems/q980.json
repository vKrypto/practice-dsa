{
    "id": 980,
    "description": "**Description:**</br>\nGiven a sorted integer array nums and an integer n, determine the fewest number of additional integers (patches) needed to ensure that every number in the range [1, n] can be represented as the sum of some subset of the array.\n\n**Examples:**\n\n**Input 1**:\n```\nnums = [1, 3], n = 6\n```\n\n**Output 1**: \n```\n1\n```\n**Explanation**: </br>\nBy adding the integer 2 to the array, we can form the sums [1], [2], [3], [1, 3], [2, 3], [1, 2, 3], covering the entire range [1, 6].\n\n\n**Input 2:**\n```\nnums = [1, 5, 10], n = 20\n```\n\n**Output**: \n```\n2\n```\n**Explanation**:</br>\n Adding the integers 2 and 4 to the array allows forming sums that cover the range [1, 20].\n\n**Constraints**:</br>\n1 <= nums.length <= 1000</br>\n1 <= nums[i] <= 10<sup>4</sup> </br>\nnums is sorted in ascending order.</br>\n1 <= n <= 2<sup>31</sup> - 1",
    "title": "Covering Integer Range with Minimum Additions",
    "default_testcase": {
        "id": 8609,
        "input": "1 3\n6",
        "expected_output": "1",
        "code_problem_id": 980,
        "created_at": "2024-06-17T08:44:37.698Z",
        "updated_at": "2024-06-17T08:44:37.698Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 3276,
            "code_problem_id": 980,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution {\npublic:\n    int minPatches(vector<int>& nums, int n) {\n        \n    ",
            "skeleton_class_end": "}\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 3277,
            "code_problem_id": 980,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "\nclass Solution {\n    public int minPatches(int[] nums, int n) {\n      \n   ",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 3278,
            "code_problem_id": 980,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def minPatches(self, nums, n):\n        ",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 3279,
            "code_problem_id": 980,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    minPatches(nums, n) {\n       \n    ",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        }
    ]
}