{
    "id": 797,
    "description": "Given an integer `n`, an array of integers `nums`, and an integer `limit`, we will choose any positive integer `d`, divide all the array elements by it, and sum up the value of each division into `result`. Find the **smallest** `d` such that the result for it is less than or equal to `limit`.\n\nEach result of the division is rounded to the nearest integer greater than or equal to that element. (For example: `7/3 = 3` and `10/2 = 5`).\n\n**Input Format**\n- `1st Line contains a single interger n, size of the nums array.`</br>\n- `2nd Line contains n space seperated integers denoting the nums array.`</br>\n- `3rd Line contains a single interger limit.`\n\n\n**`Output Format:`**\n\n- `Single Integer denoting the smallest possible divisor.`\n\n\n**Example 1:**\n\n**`Input:`**\n`n = 4, nums = [1,2,5,9], limit = 6`\n\n**`Output:`**\n`5`\n\n**` Explanation:`**\n\n`We can get a sum of 17 (1+2+5+9) if the d is 1. \nIf the d is 4 we can get a sum of 7 (1+1+2+3) and if the d is 5 the sum will be 5 (1+1+1+2). `\n\n\n**Example 2:**\n\n**`Input:`** \n```\nn = 5, nums = [44,22,33,11,1], limit = 5\n```\n**Output:** </br>\n`44`\n\n**Constraints:**\n\n- `1 <= n <= 5 * 10^4`\n\n- `1 <= nums[i] <= 10^6`\n\n- `n <= threshold <= 10^6`",
    "title": "Smallest Divisor Satisfying the Limit ",
    "default_testcase": {
        "id": 7152,
        "input": "4\n1 2 5 9\n6",
        "expected_output": "5\n",
        "code_problem_id": 797,
        "created_at": "2024-04-04T11:20:05.144Z",
        "updated_at": "2024-04-04T11:20:05.144Z"
    },
    "problem_type": "session_assignment",
    "code_skeletons": [
        {
            "id": 2607,
            "code_problem_id": 797,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution {\npublic:\n    int smallestDivisor(int n, vector<int>& nums, int limit) {\n      //Write your code here",
            "skeleton_class_end": "   }\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 2608,
            "code_problem_id": 797,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public int smallestDivisor(int n, int[] nums, int limit) {\n      //Write your code here",
            "skeleton_class_end": "  }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 2609,
            "code_problem_id": 797,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def smallestDivisor(self, n, nums, limit):\n      #Write your code here",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 2610,
            "code_problem_id": 797,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    constructor() {}\n    smallestDivisor(n, nums, limit) {\n      //Write your code here",
            "skeleton_class_end": "  }\n}",
            "skeleton_solution_class": ""
        }
    ]
}