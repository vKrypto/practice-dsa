{
    "id": 624,
    "description": "You are given an integer array **prices **where **prices[i]** is the price of a given stock on the** ith** day.\n\nOn each day, you may decide to buy and/or sell the stock. You can only hold at most one share of the stock at any time. However, you can buy it then immediately sell it on the same day.\n\nReturn the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.\n### Input Format\n```\nAn array prices where prices[i] is the price of the stock on the ith day\n```\n### Output Format\n```\nThe maximum profit that can be achieved by buying and selling the stock, or 0 if no profit can be made.\n```\n### Example 1\n\n### Input\n\n```CPP\nprices = [7,1,5,3,6,4]\n```\n\n### Output\n\n```CPP\n7\n```\n\n### Explanation \n```\nBuy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.\nThen buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.\nTotal profit is 4 + 3 = 7.\n```\n### Example 2\n\n### Input\n\n```CPP\nprices = [1,2,3,4,5]\n```\n\n### Output\n\n```CPP\n4\n```\n\n### Explanation\n```\nBuy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\nTotal profit is 4.\n```\n### Constraints:\n\n- 1 <= prices.length <= 3*10^4\n- 0 <= prices[i] <= 10^4",
    "title": "BTTBS",
    "default_testcase": {
        "id": 4251,
        "input": "9\n1 2 3 4 5 6 7 8 9",
        "expected_output": "8",
        "code_problem_id": 624,
        "created_at": "2024-01-27T09:52:19.983Z",
        "updated_at": "2024-01-27T09:52:19.983Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 1919,
            "code_problem_id": 624,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution {\n  public:\n\n    int maxProfit(vector < int > & pr) {",
            "skeleton_class_end": "}\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 1966,
            "code_problem_id": 624,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public int maxProfit(int[] prices) {",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 1969,
            "code_problem_id": 624,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def maxProfit(self, prices):",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 1971,
            "code_problem_id": 624,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n  maxProfit(prices) {",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        }
    ]
}