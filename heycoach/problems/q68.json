{
    "id": 68,
    "description": "Given arrival and departure times of all trains that reach a railway station. Find the **minimum** number of platforms required for the railway station so that no train is kept waiting.\nConsider that all the trains arrive on the same day and leave on the same day. Arrival and departure time can never be the same for a train but we can have **arrival time of one train equal to departure time of the other**. At any given instance of time, **same platform can not be used for both departure of a train and arrival of another train**. In such cases, we need different platforms.\n\n**Note**: Time intervals are in the 24-hour format(**HHMM**) , where the first two characters represent hour (between 00 to 23 ) and the last two characters represent minutes (this may be > 59).\n\n\n\n### Example 1 \n\n### Input\n```CPP\narr = [0900, 0940, 0950, 1100, 1500, 1800]\ndep = [0910, 1200, 1120, 1130, 1900, 2000]\n``` \n### Output \n```CPP \n3\n``` \n#### Explanation:\nMinimum 3 platforms are required to safely arrive and depart all trains.\n### Example 2 \n\n### Input\n```CPP\narr = [0900, 1100, 1235]\ndep = [1000, 1200, 1240]\n``` \n### Output \n```CPP \n1\n``` \n#### Explanation:\nOnly 1 platform is required to safely manage the arrival and departure of all trains. \n### Constraints:\n\n* 1 <= arr.length,dep.length <= 5000\n* 0 <= arr[i] <= dep[i] <= 2359\n",
    "title": "Minimize the number of platforms",
    "default_testcase": {
        "id": 471,
        "input": "10\n744 359 1385 490 358 1131 1590 1818 1609 664 \n1636 1070 1532 1604 1268 2215 2300 2350 1924 943 ",
        "expected_output": "5\n",
        "code_problem_id": 68,
        "created_at": "2022-09-30T08:17:55.142Z",
        "updated_at": "2022-09-30T08:17:55.142Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 111,
            "code_problem_id": 68,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\npublic:\n\tint calculateMinPatforms(int arr[], int dep[], int n) {\n\t\t// write your code here\n\t}\n};"
        },
        {
            "id": 480,
            "code_problem_id": 68,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\n    public int calculateMinPatforms(int[] arr, int[] dep, int n) {\n      // write your code here\n    }\n}\n\n"
        }
    ]
}