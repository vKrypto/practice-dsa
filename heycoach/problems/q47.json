{
    "id": 47,
    "description": "You have given an array **arr** consisting of **N distinct** integers. You have to generate all the **unique** subsets of this array and return the list of list of subsets in **lexographically increasing order**. \n\n### Example 1 \n\n### Input\n```CPP\narr = [1,2,3]\n``` \n### Output \n```CPP \n[[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]\n``` \n#### Explanation:\n\nAbove are all the unique subsets for the given array [1,2,3] in lexographically increasing order.\n**Note**: You have to consider empty subset as well.\n\n### Example 2 \n\n### Input\n```CPP\narr = [1,2]\n``` \n### Output \n```CPP \n[[],[1],[1,2],[2]]\n``` \n#### Explanation:\n\nAbove are all the unique subsets for the array [1,2]\n\n\n### Constraints:\n\n* 1 <= N <= 12\n* 1 <= arr[i] <= 100\n\n\n\n\n\n",
    "title": "Generate subsets",
    "default_testcase": {
        "id": 6374,
        "input": "3\n1 2 3",
        "expected_output": "\n1\n1 2\n1 2 3\n1 3\n2\n2 3\n3\n",
        "code_problem_id": 47,
        "created_at": "2024-03-12T20:49:44.311Z",
        "updated_at": "2024-03-12T20:49:44.311Z"
    },
    "problem_type": "level_test",
    "code_skeletons": [
        {
            "id": 77,
            "code_problem_id": 47,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "\nclass Solution{\npublic:\n\tvector<vector<int>> generateSubsets(vector<int> &arr) {\n      //Write your code here;",
            "skeleton_class_end": "   }\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 467,
            "code_problem_id": 47,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public List<List<Integer>> generateSubsets(int[] nums) {\n      //Write your code here;",
            "skeleton_class_end": "  }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 603,
            "code_problem_id": 47,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    generateSubsets(arr) {\n      //Write your code here;",
            "skeleton_class_end": "    }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 604,
            "code_problem_id": 47,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def generateSubsets(self, A):\n        #code here",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        }
    ]
}