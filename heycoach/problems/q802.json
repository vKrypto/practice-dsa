{
    "id": 802,
    "description": "Description\n\nAman and Binesh are two friends and both of them have their own set of numbers in the form of an array. Now they both want to combine their numbers to achieve the most amount of zeroes that they can get.\n\nThey can combine the numbers in the following manner:\nThey can choose a real number \u2018d\u2019 (not an integer) and create another number c as:\n\nc[i] = d.a[i] + b[i];\n\nDetermine the most number of zeroes you can get by selecting \u2018d\u2019 optimally.\n\nSample Input:\n\nN = 5,  \nA = 1 2 3 4 5,  \nB = 2 4 7 11 3\n\nSample Output:\n\n-2\n\nExplanation:\nWe can choose d as -2, so we get the array c as:\n\nC = 0 0 1 3 -7\n\nThe array c that we formed has two zeroes and those are the maximum amount of zeroes that we can get. (Remember that d is a real number which means it could be fractional values as well like \u2159 or -\u2156.\n\nConstraints:\n\n1<=n<=10^5\n\n-10^8<=a[i]<=10^8\n\n",
    "title": "Most Zeroes",
    "default_testcase": {
        "id": 7626,
        "input": "5\n-77 8 9 14 3\n77 45 2 -14 5",
        "expected_output": "2\n",
        "code_problem_id": 802,
        "created_at": "2024-05-01T14:42:35.344Z",
        "updated_at": "2024-05-01T14:42:35.344Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 2628,
            "code_problem_id": 802,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution{\n    public:\n    int solve(vector<int> &a, vector<int> &b, int n){\n      //Write your code here;",
            "skeleton_class_end": "    }\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 2650,
            "code_problem_id": 802,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    solve(A, B, N) {\n      //Write your code here",
            "skeleton_class_end": "    }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 2651,
            "code_problem_id": 802,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def solve(self, A, B, N):\n      #Write your code here",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 2652,
            "code_problem_id": 802,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public int solve(int[] A, int[] B, int N) {\n      //Write your code here",
            "skeleton_class_end": "    }\n}",
            "skeleton_solution_class": ""
        }
    ]
}