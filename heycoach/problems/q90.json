{
    "id": 90,
    "description": "Given an array of integers containing n + 1 integers where each integer is the permutation of n.\nOnly one element is repeated one time. \nPermutation  of n means **All the elements of ranging from 1 to n will occur in the array only once**.\n\n#### Input Format: \n- first line contains only one integer n the size of the array.\n- second line contains n elements of the array.\n\n#### Output Format:\n- Print only one integer which is reapeted.\n\n#### 1 <= n <= 105\n- nums.length == n + 1\n- 1 <= nums[i] <= n\n- All the integers in nums appear only once except for precisely one integer which appears two times\n\n#### Example: \nInput:\n5\n1 3 4 2 2\nOutput:\n 2",
    "title": "Repeated Element",
    "default_testcase": null,
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 65,
            "code_problem_id": 90,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\npublic:\n  void solve(vector<int> &arr) {\n    \n  } \n};"
        },
        {
            "id": 70,
            "code_problem_id": 90,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\n  public void solve(Vector<Integer> arr) {\n  } \n}"
        },
        {
            "id": 75,
            "code_problem_id": 90,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution:\n    def solve(self, arr):\n        pass"
        }
    ]
}