{
    "id": 259,
    "description": "\nYou are given the root of a binary tree containing digits from 0 to 9 only.\n\n```\n\nEach root-to-leaf path in the tree represents a number.\n```\n\n- `For example, the root-to-leaf path 1 -> 2 -> 3 represents the number 123.`</br>                           \n\n\nReturn the total sum of all root-to-leaf numbers. Test cases are generated so that the answer will fit in a 32-bit integer.\n\nA leaf node is a node with no children.\n\n#### `Example 1`\n\n![Image](https://assets.leetcode.com/uploads/2021/02/19/num1tree.jpg)\n\n#### `Input`\n\n```CPP\nroot = [1,2,3]\n```\n\n#### `Output`\n\n```CPP\n25\n```\n\n#### `Explanation:`\n\n- `The root-to-leaf path 1->2 represents the number 12.`\n\n- `The root-to-leaf path 1->3 represents the number 13.`\n\n- `Therefore, sum = 12 + 13 = 25.`\n\n### `Example 2`\n\n![Image](https://assets.leetcode.com/uploads/2021/02/19/num2tree.jpg)\n\n### `Input`\n\n```CPP\nroot = [4,9,0,5,1]\n```\n\n### `Output`\n\n```CPP\n1026\n```\n\n#### `Explanation:`\n\n- `The root-to-leaf path 4->9->5 represents the number 495`.\n\n- `The root-to-leaf path 4->9->1 represents the number 491.`\n\n- `The root-to-leaf path 4->0 represents the number 40.`\n\n- `Therefore, sum = 495 + 491 + 40 = 1026.`\n\n#### `Constraints:`\n\n- `The number of nodes in the tree is in the range [1, 1000].`\n- `0 <= Node.val <= 9`\n- `The depth of the tree will not exceed 10.`\n",
    "title": "Sum Tree",
    "default_testcase": {
        "id": 1795,
        "input": "   1\n   2\n   3\nnull\n   4\n   9\n   0\n   5\n   1\nnull\n   4\n   9\n   0\n   5\n   1\nnull\nnull\n   4\n   9\n   0\n   5\n   4\n   9\n   0\n   5\n   1\n   9\n   0\n   5\n   1\n",
        "expected_output": "969950",
        "code_problem_id": 259,
        "created_at": "2022-11-05T19:26:21.382Z",
        "updated_at": "2022-11-05T19:26:21.382Z"
    },
    "problem_type": "level_test",
    "code_skeletons": [
        {
            "id": 457,
            "code_problem_id": 259,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "/*\n  struct Node\n{\n    int data;\n    struct Node* left, * right;\n}\n*/\n\nclass solution {\npublic:\n    int SumOfTheTree(struct Node* root){\n      //Write your code here",
            "skeleton_class_end": "\n    }\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 849,
            "code_problem_id": 259,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "/*\nclass Node {\n    int data;\n    Node left, right;\n\n    Node(int item) {\n        data = item;\n        left = right = null;\n    }\n}\n*/\n\n\nclass Solution {\n    long ans = 0;\n    long SumOfTheTree(Node root) {\n      // write your code here",
            "skeleton_class_end": "  }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 863,
            "code_problem_id": 259,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    sumNumbers(root) {\n      //Write your code here",
            "skeleton_class_end": "  }\n}\n",
            "skeleton_solution_class": ""
        },
        {
            "id": 865,
            "code_problem_id": 259,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "\n\nclass Solution:\n    def sum_of_the_tree(self, root):",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        }
    ]
}