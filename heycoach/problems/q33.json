{
    "id": 33,
    "description": "A batch of n goods (n \u2014 an even number) is brought to the store, i-th of which has weight ai. Before selling the goods, they must be packed into packages. After packing, the following will be done:\n\n- There will be n/2 packages, each package contains exactly two goods;\n- The weight of the package that contains goods with indices i and j (1\u2264i,j\u2264n) is ai+aj.\nWith this, the cost of a package of weight x is always \u230ax/k\u230b burles (rounded down), where **k** \u2014 a fixed and given value.\n\nPack the goods to the packages so that the revenue from their sale is maximized. In other words, make such n/2 pairs of given goods that the sum of the values \u230axi/k\u230b, where xi is the weight of the package number i (1\u2264i\u2264n/2), is **maximal**.\n\n#### For example, let n=6,k=3, weights of goods a=[3,2,7,1,4,8]. Let's pack them into the following packages.\n\n- In the first package we will put the third and sixth goods. Its weight will be a3+a6=7+8=15. The cost of the package will be \u230a15/3\u230b=5 burles.\n- In the second package put the first and fifth goods, the weight is a1+a5=3+4=7. The cost of the package is \u230a7/3\u230b=2 burles.\n- In the third package put the second and fourth goods, the weight is a2+a4=2+1=3. The cost of the package is \u230a3/3\u230b=1 burle.\nWith this packing, the total cost of all packs would be 5+2+1=8 burles.\n\n**Input**\nThe first line of the input contains an integer t (1\u2264t\u226410^4) \u2014the number of test cases in the test.\n\nThe descriptions of the test cases follow.\n\nThe first line of each test case contains two integers n (2\u2264n\u22642\u22c510^5) and k (1\u2264k\u22641000). The number n \u2014 is even.\n\nThe second line of each test case contains exactly n integers a1,a2,\u2026,an (0\u2264ai\u226410^9).\n\nIt is guaranteed that the sum of n over all the test cases does not exceed 2\u22c510<sup>5</sup>.\n\n**Output**\nFor each test case, print on a separate line a single number \u2014 the maximum possible total cost of all the packages.",
    "title": "Maximum Price",
    "default_testcase": null,
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 97,
            "code_problem_id": 33,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\n    public void solve(Vector<Integer> arr, int k) {\n\n    } \n}\n\n\n"
        },
        {
            "id": 99,
            "code_problem_id": 33,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution:\n    def solve(self, arr, x):\n        pass\n\n"
        },
        {
            "id": 100,
            "code_problem_id": 33,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\npublic:\n  void solve(vector<int> &arr,int k) {\n    \n  } \n};\n"
        }
    ]
}