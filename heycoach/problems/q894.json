{
    "id": 894,
    "description": "Anish, Binish and Vivek are playing a game. They have n piles of stones where (n%3=0). In each turn you can select three piles from the total piles. Anish takes the maximum, then Vivek takes the second maximum and then Binish takes the last one.\n\nHelp Vivek get the maximum number of stones possible and return that number.\n\n\n#### Sample Input :\n```\n6\n2 4 9 8 11 2\n```\n#### Sample Output:\n```\n13\n```\n#### Explanation:</br>\n We can select the piles [11,9, 2] from which Anish will get 11 , Vivek will get 9 and Binish would get 2. The next piles that are left is [8, 4, 2] from which Anish will get 8, Vivek will get 4 and Binish would get 2. Thus the total number of stones that Vivek has is 9 + 4 = 13.\n\n#### Constraints:\n\n- 3<=n<=10^5\n- 1<=a[i]<=10^4\n",
    "title": "Maximum stones",
    "default_testcase": {
        "id": 7990,
        "input": "6\n2 4 9 8 11 2",
        "expected_output": "13\n",
        "code_problem_id": 894,
        "created_at": "2024-05-18T07:09:21.096Z",
        "updated_at": "2024-05-18T07:09:21.096Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 2965,
            "code_problem_id": 894,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution {\npublic:\n    int MaximumPile(vector<int>& piles) {\n      //Write your code here",
            "skeleton_class_end": "    }\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 2966,
            "code_problem_id": 894,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public int MaximumPile(int[] piles) {\n      //Write your code here",
            "skeleton_class_end": "    }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 2967,
            "code_problem_id": 894,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def MaximumPile(self, piles):\n      #Write your code here",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 2968,
            "code_problem_id": 894,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    MaximumPile(piles) {\n      //Write your code here",
            "skeleton_class_end": "    }\n}",
            "skeleton_solution_class": ""
        }
    ]
}