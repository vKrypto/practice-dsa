{
    "id": 326,
    "description": "Alice has coins of different denominations and he has to pay an amount to buy a item.\nReturn the number of combinations that make up that amount. If that amount of money cannot be made up by any combination of the coins, return 0.\nYou may assume that you have an infinite number of each kind of coin.\n\n**Constraints:**\n\n1 <= coins.length <= 300\n\n1 <= coins[i] <= 5000\n\nAll the values of coins are unique.\n\n0 <= amount <= 5000\n\n**Example:**\n\n**Input: **\namount = 5, coins = [1,2,5]\n\n**Output:**         \n4",
    "title": "MIN COINS REQUIRED-II",
    "default_testcase": {
        "id": 2109,
        "input": "3 4\n1 2 3",
        "expected_output": "4",
        "code_problem_id": 326,
        "created_at": "2023-09-19T11:02:17.482Z",
        "updated_at": "2023-09-19T11:02:17.482Z"
    },
    "problem_type": "session_assignment",
    "code_skeletons": [
        {
            "id": 775,
            "code_problem_id": 326,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n  def count_ways_to_make_change(self, arr, n, T):\n    #Write your code here",
            "skeleton_class_end": null,
            "skeleton_solution_class": ""
        },
        {
            "id": 776,
            "code_problem_id": 326,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    countWaysToMakeChange(arr, n, T) {\n      //Write your code here;",
            "skeleton_class_end": "  }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 777,
            "code_problem_id": 326,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution{\n  static long countWaysToMakeChange(int[] arr, int n, int T) {\n    //Write your cpde here\n",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 778,
            "code_problem_id": 326,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution {\npublic:\n    long countWaysToMakeChange(vector<int>& arr, int n, int T) {\n      //Write your code here",
            "skeleton_class_end": "}\n};",
            "skeleton_solution_class": ""
        }
    ]
}