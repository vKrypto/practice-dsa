{
    "id": 213,
    "description": "You are given an array `num` of n positive integers and you have to tell how many subsets are there of this array such that their sum is equal to `target` .\n**Note** : Two subsets are considered different if indexes of elements chosen by these subsets are different.\n### Example 1 \n\n### Input\n```CPP\nn = 4, target = 3\nnum = [1,2,2,3]\n```\n### Output \n```CPP\n3\n```\n### Explanation\nthe number of possible ways of making sum = 3 are:\n{1,2}\n{3}\n{1,2}\n\nHence the output will be 3.\n\n**Example 2:**\n\n**Input:**\n```CPP\nn = 2,target = 3\nnum = [1,2]\n```\n**Output:** \n```CPP\n1\n```\n\n### Constraints:\n-   `1 <= num.length <= 200`\n-   `1 <= num[i] <= 100`\n- `1 <= target <= 500`\n",
    "title": "Count target sum subsets",
    "default_testcase": {
        "id": 1516,
        "input": "4 3\n1 2 2 3",
        "expected_output": "3",
        "code_problem_id": 213,
        "created_at": "2022-10-30T15:38:15.193Z",
        "updated_at": "2022-10-30T15:38:15.193Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 318,
            "code_problem_id": 213,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\npublic:\n    int findWays(vector<int> &num, int tar)\n    {\n      // write your code here\n    }\n};\n"
        }
    ]
}