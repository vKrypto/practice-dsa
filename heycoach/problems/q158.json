{
    "id": 158,
    "description": "Given an array of integers ** nums ** sorted in non-decreasing order, find the starting and ending position of a given target value.\n\nIf target is not found in the array, print [-1, -1].\n\n** You must write an algorithm with O(log n) runtime complexity.\n\n#### Input Format:\n* first line contains two integers n(size of the array) and target\n* second line contains n single space separated integers (elements of the array)\n\n#### Output Format:\n* print two integers first position and last position.\n\n#### Constraints:\n\n* 0 <= nums.length <= 105\n* -10^9 <= nums[i] <= 10 ^9\n* nums is a non-decreasing array.\n* -10^9 <= target <= 10^9",
    "title": "Find First and Last Position of Element in Sorted Array",
    "default_testcase": null,
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 233,
            "code_problem_id": 158,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution:\n    def solve(self, arr, target):\n        pass\n"
        },
        {
            "id": 234,
            "code_problem_id": 158,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "\nclass Solution {\n  public void solve(Vector<Integer> arr,int target) {\n    \n  } \n}"
        },
        {
            "id": 235,
            "code_problem_id": 158,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "\nclass Solution {\npublic:\n  void solve(vector<int> &arr,int target) {\n    \n  } \n};\n\n"
        }
    ]
}