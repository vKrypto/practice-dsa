{
    "id": 439,
    "description": "Given two sorted arrays nums1 and nums2 of sizes m and n respectively, return the median of the two sorted arrays. You have to return an integer kind of value.\n\nThe overall run time complexity should be O(log (m+n)).\n\n**Example**:</br>\n\n**Input**:\n```\nnums1 = [1,3], nums2 = [2]\n```\n**Output**:\n```\n2\n```\n**Explanation**:</br>\n`Merged array = [1,2,3] and the median is 2.`\n\n**Input**:\n```\nnums1 = [1,2], nums2 = [3,4]\n```\n**Output**:\n```\n2\n```\n**`Explanation`**:  \n`Merged array = [1,2,3,4] and the median is (2 + 3) / 2 = 2.5 but you have to return (2+3)/2 which will give the final output as 2, so basically return the floor(median).`\n\n**`Constraints`**:</br>\n\n- `nums1.length == m`\n- `nums2.length == n`\n- `0 <= m <= 1000`\n- `0 <= n <= 1000`\n- `1 <= m + n <= 2000`\n- `-10^6 <= nums1[i], nums2[i] <= 10^6`",
    "title": "Median of Two Sorted Arrays",
    "default_testcase": {
        "id": 5938,
        "input": "2 2\n1 5\n9 11",
        "expected_output": "7",
        "code_problem_id": 439,
        "created_at": "2024-02-23T13:22:19.592Z",
        "updated_at": "2024-02-23T13:22:19.592Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 1242,
            "code_problem_id": 439,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution{\n    public:\n    int getMedian(int ar1[], int ar2[], int n, int m)\n    {\n      //Write your code here",
            "skeleton_class_end": "    }\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 1243,
            "code_problem_id": 439,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    getMedian(ar1, ar2, n, m) {\n      //Write your code here",
            "skeleton_class_end": "    }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 1244,
            "code_problem_id": 439,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def getMedian(self, ar1, ar2, n, m):\n      #Write your code here",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 1245,
            "code_problem_id": 439,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public int getMedian(int[] ar1, int[] ar2, int n, int m) {\n      //Write your code here;",
            "skeleton_class_end": "   }\n}",
            "skeleton_solution_class": ""
        }
    ]
}