{
    "id": 710,
    "description": "\nYou are given the root of a binary tree containing digits from 0 to 9 only.\n\nEach root-to-leaf path in the tree represents a number.\n\nFor example, the root-to-leaf path 1 -> 2 -> 3 represents the number 123.\nReturn the total sum of all root-to-leaf numbers. Test cases are generated so that the answer will fit in a 32-bit integer.\n\nA leaf node is a node with no children.\n\n### Example 1\n\n![Image](https://assets.leetcode.com/uploads/2021/02/19/num1tree.jpg)\n\n### Input\n\n```CPP\nroot = [1,2,3]\n```\n\n### Output\n\n```CPP\n25\n```\n\n#### Explanation:\n\nThe root-to-leaf path 1->2 represents the number 12.\n\nThe root-to-leaf path 1->3 represents the number 13.\n\nTherefore, sum = 12 + 13 = 25.\n\n### Example 2\n\n![Image](https://assets.leetcode.com/uploads/2021/02/19/num2tree.jpg)\n\n### Input\n\n```CPP\nroot = [4,9,0,5,1]\n```\n\n### Output\n\n```CPP\n1026\n```\n\n### Explanation\n\nThe root-to-leaf path 4->9->5 represents the number 495.\n\nThe root-to-leaf path 4->9->1 represents the number 491.\n\nThe root-to-leaf path 4->0 represents the number 40.\n\nTherefore, sum = 495 + 491 + 40 = 1026.\n\n### Constraints:\n\n- The number of nodes in the tree is in the range [1, 1000].\n- 0 <= Node.val <= 9\n- The depth of the tree will not exceed 10.\n",
    "title": "Sum Tree",
    "default_testcase": {
        "id": 4788,
        "input": "   1\n   2\n   3\nnull\n   4\n   9\n   0\n   5\n   1\nnull\n   4\n   9\n   0\n   5\n   1\nnull\nnull\n   4\n   9\n   0\n   5\n   4\n   9\n   0\n   5\n   1\n   9\n   0\n   5\n   1\n",
        "expected_output": "969950",
        "code_problem_id": 710,
        "created_at": "2024-02-01T06:41:49.734Z",
        "updated_at": "2024-02-01T06:41:49.734Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 2250,
            "code_problem_id": 710,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "\nclass solution {\npublic:\n    int SumOfTheTree(struct Node* root){",
            "skeleton_class_end": "   }\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 2251,
            "code_problem_id": 710,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "\nclass Solution {\n  long SumOfTheTree(Node root) {\n  ",
            "skeleton_class_end": "}",
            "skeleton_solution_class": ""
        },
        {
            "id": 2252,
            "code_problem_id": 710,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "\n\n\nclass Solution:\n    def sum_of_the_tree(self, root):",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 2254,
            "code_problem_id": 710,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "\nclass Solution {\n    sumNumbers(root) {",
            "skeleton_class_end": "\n    }\n  }\n}",
            "skeleton_solution_class": ""
        }
    ]
}