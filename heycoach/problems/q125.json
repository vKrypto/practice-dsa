{
    "id": 125,
    "description": "You are given a `9*9` character matrix `board`  which represents a sudoku.\nWrite a program to solve a Sudoku puzzle by filling the empty cells.\n\nA sudoku solution must satisfy  **all of the following rules**:\n\n1.  Each of the digits  `1-9`  must occur exactly once in each row.\n2.  Each of the digits  `1-9`  must occur exactly once in each column.\n3.  Each of the digits  `1-9`  must occur exactly once in each of the 9  `3x3`  sub-boxes of the grid.\n\nThe  `'.'`  character indicates empty cells.\n\n\n### Example 1 \n\n[![sudoku-tc.png](https://i.postimg.cc/G3PgbhWh/sudoku-tc.png)](https://postimg.cc/bdJ9T8YK)\n\n### Input\n```CPP\n\nboard = \n[[\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],\n[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],\n[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],\n[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],\n[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],\n[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],\n[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],\n[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],\n[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]]\n```\n\n\n### Output \n```CPP \n[[\"5\",\"3\",\"4\",\"6\",\"7\",\"8\",\"9\",\"1\",\"2\"],\n[\"6\",\"7\",\"2\",\"1\",\"9\",\"5\",\"3\",\"4\",\"8\"],\n[\"1\",\"9\",\"8\",\"3\",\"4\",\"2\",\"5\",\"6\",\"7\"],\n[\"8\",\"5\",\"9\",\"7\",\"6\",\"1\",\"4\",\"2\",\"3\"],\n[\"4\",\"2\",\"6\",\"8\",\"5\",\"3\",\"7\",\"9\",\"1\"],\n[\"7\",\"1\",\"3\",\"9\",\"2\",\"4\",\"8\",\"5\",\"6\"],\n[\"9\",\"6\",\"1\",\"5\",\"3\",\"7\",\"2\",\"8\",\"4\"],\n[\"2\",\"8\",\"7\",\"4\",\"1\",\"9\",\"6\",\"3\",\"5\"],\n[\"3\",\"4\",\"5\",\"2\",\"8\",\"6\",\"1\",\"7\",\"9\"]]\n\n``` \n#### Explanation:\nThe input board is shown above and the only valid solution is shown below:\n\n[![sudoku-op.png](https://i.postimg.cc/X7G8pjhC/sudoku-op.png)](https://postimg.cc/xcQHZ29f)\n\n\n\n### Constraints:\n-   `board.length == 9`\n-   `board[i].length == 9`\n-   `board[i][j]`  is a digit or  `'.'`.\n-   It is  **guaranteed**  that the input board has only one solution.\n\n",
    "title": "Solve the sudoku",
    "default_testcase": {
        "id": 900,
        "input": ".95.6.43.\n.2.45.1..\n..172....\n.8.....29\n.6.59....\n.......45\n...6.7.9.\n.1....58.\n..6.....1",
        "expected_output": "795861432\n328459167\n641723958\n583174629\n264598713\n179236845\n852617394\n917342586\n436985271\n",
        "code_problem_id": 125,
        "created_at": "2022-10-11T08:35:03.508Z",
        "updated_at": "2022-10-11T08:35:03.508Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 198,
            "code_problem_id": 125,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\npublic:\n    void solveSudoku(vector<vector<char>>& board) {\n      // write your code here\n    }\n};"
        },
        {
            "id": 507,
            "code_problem_id": 125,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\n    public void solveSudoku(char[][] board) {\n      // write the code here\n    }\n}\n\n"
        }
    ]
}