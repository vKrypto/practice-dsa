{
    "id": 549,
    "description": "You are given a 2D board of characters and a word. Your task is to determine if the given word exists in the grid. The word can \nbe constructed from letters of sequentially adjacent cells, where \"adjacent\" cells are horizontally or vertically neighboring.\n\nWrite a function exist that takes the following parameters:\n\nbool exist(vector<vector<char>>& board, string word)\n\n### Input Format:\n\n```\nA 2D board (vector of vectors) of characters, board, representing the game board (1 \u2264 board.length, board[i].length \u2264 200).\nA string word (1 \u2264 word.length \u2264 10^3) representing the word you need to search for.\n\n```\n\n### Output Format:\n\n```\nReturn true if the word exists in the board; otherwise, return false. \n\n```\n\n###    Sample Input and Output \n \n#### Sample Input 1\n\n```\n3\n4\nA B C E\nS F C S\nA D E E\nABCCED\n```\n#### Sample Output 1\n```\ntrue\n```\n\n`Explaination: Given ABCCED, there exists a path A(1,1) , B(1,2) , C(1,3) , C(2,3) , E(3,3) , D(3,2).`\n\n\n### Constraints:\n\n```\n1 \u2264 board.length, board[i].length \u2264 200\n1 \u2264 word.length \u2264 10^3\n```",
    "title": "2D Board",
    "default_testcase": {
        "id": 3701,
        "input": "3 4\nA B C E\nS F C S\nA D E E\nSEE",
        "expected_output": "true\n",
        "code_problem_id": 549,
        "created_at": "2024-01-11T08:03:29.010Z",
        "updated_at": "2024-01-11T08:03:29.010Z"
    },
    "problem_type": "session_assignment",
    "code_skeletons": [
        {
            "id": 1643,
            "code_problem_id": 549,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "bool exist(vector<vector<char>>& board, string word) {\n}"
        },
        {
            "id": 1644,
            "code_problem_id": 549,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\n  bool exist()\n  {\n    \n  }\n}"
        },
        {
            "id": 1657,
            "code_problem_id": 549,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution:\n\n    # Function to check if a word exists in the board\n    def isWordExist(self, board, word):\n        \n\n \n"
        },
        {
            "id": 1676,
            "code_problem_id": 549,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "\nclass Solution {\n  isWordExist(board,word){\n\n  }\n\n}"
        }
    ]
}