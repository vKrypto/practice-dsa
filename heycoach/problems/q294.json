{
    "id": 294,
    "description": "Given an array of integers nums and an integer k,\n your task is to devise an efficient algorithm that \n determines the number of subarrays within the given \n array, where the sum of elements in each subarray is \n exactly equal to the given value k.\n \n NOTE \n \n A subarray is defined as a continuous and non-empty sequence of \n elements extracted from the original array.\n\n```\nSample Input - 1:\n\n5 10\n10 1 4 2 3\n\nSample Output - 1:\n\n2\n```\n\nExplanation: We have two such subarrays where the sum of elements is equal to 10 and they are {10} and {4 2 3 1}.\n\n```\nSample Input - 2:\n\n6 6\n-4 4 3 3 8 -2\n\nSample Output - 2:\n3\n```\n\nExplanation: There are in total 3 subarrays whose sum is equal to 6 and they are {-4 4 3 3} , {3 3} and {8 -2}.\n\nConstraints:\n\n1 <= nums.length <= 2 * 10^4\n\n-1000<= nums[i] <= 1000\n\n1 <= k <= 10^7",
    "title": "Number of subarrays with given sum",
    "default_testcase": {
        "id": 8067,
        "input": "6 6\n-4 4 3 3 8 -2",
        "expected_output": "3\n",
        "code_problem_id": 294,
        "created_at": "2024-05-19T06:31:48.858Z",
        "updated_at": "2024-05-19T06:31:48.858Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 724,
            "code_problem_id": 294,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution{\n    public:\n    int findSubarraySum(int arr[], int n, int sum){\n      //Write your code here",
            "skeleton_class_end": "    }\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 3014,
            "code_problem_id": 294,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def find_subarray_sum(self, arr, n, sum):\n      #Write your code here",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 3015,
            "code_problem_id": 294,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution{\n    findSubarraySum(arr, n, sum) {\n      //Write your code here",
            "skeleton_class_end": "    }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 3016,
            "code_problem_id": 294,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public int findSubarraySum(int[] arr, int n, int sum) {\n      //Write your code here",
            "skeleton_class_end": "    }\n}",
            "skeleton_solution_class": ""
        }
    ]
}