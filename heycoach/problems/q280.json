{
    "id": 280,
    "description": "\nNitin is an explorer, and he has a map that consists of `n` number of houses. All houses at this place are arranged in a circle. Each house has a certain amount of money stashed. The only constraint stopping Nitin from getting each of them is that adjacent houses have security systems connected, and it will automatically contact the police if two adjacent houses were broken into on the same night.\n\nGiven an integer array `nums` representing the amount of money of each house, return the maximum amount of money Nitin can rob tonight without alerting the police.\n\n\n### Examples:\n\n**Input:**\n```\nnums = [1, 2, 3, 1]\n```\n\n**Output:**\n```\n4\n```\n\n\n**Input:**\n```\nnums = [2, 7, 9, 3, 1]\n```\n\n\n**Output:**\n```\n11\n```\n### Constraints:\n\n`1 <= nums.length <= 100`\n\n`0 <= nums[i] <= 900`",
    "title": "Max coins -II",
    "default_testcase": {
        "id": 7336,
        "input": "7\n6 7 1 3 8 2 4",
        "expected_output": "19\n",
        "code_problem_id": 280,
        "created_at": "2024-04-19T17:20:43.389Z",
        "updated_at": "2024-04-19T17:20:43.389Z"
    },
    "problem_type": "session_assignment",
    "code_skeletons": [
        {
            "id": 695,
            "code_problem_id": 280,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution {\npublic:\n    int rob(vector<int>& nums) {\n      //Write your code here\n",
            "skeleton_class_end": "}\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 696,
            "code_problem_id": 280,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def rob(self, nums: List[int]) -> int:\n      #Write your code here",
            "skeleton_class_end": null,
            "skeleton_solution_class": "\n       \n\n"
        },
        {
            "id": 697,
            "code_problem_id": 280,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    rob(nums) {\n      //Write your code here",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 698,
            "code_problem_id": 280,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public int rob(int[] nums) {\n        // Write your code here\n",
            "skeleton_class_end": "    }\n}",
            "skeleton_solution_class": ""
        }
    ]
}