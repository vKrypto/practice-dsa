{
    "id": 831,
    "description": "You are given an array of `n` integers. Print the sum of the **weight** of all **subsegments** of `arr`.\n\nThe **weight** of an array is defined as the number of unordered pairs of indexes `(i, j), where (i < j) with same value (arr[i] = arr[j])`. For example, the **weight** of array `arr = [1, 1, 2, 2, 1]` is `4`. The set of unordered pairs of indexes with same value are `(1, 2), (1,5), (2,5), and (3, 4)`.\n\n**Note :** An array `b` is a **subsegment** of an array `a` if `b` can be obtained from a by deletion of several (possibly, Zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.\n\n\n**Example**\n```\nInput : n = 4, v = [1,2,1,1]\n\nOutput : 6\n\nExplanation:\n\nAll possible subsegments of sequence [1,2,1,1] having size more than 1 are:\n\n[1,2] having 0 valid unordered pairs;\n[2,1] having 0 valid unordered pairs; \n[1,1] having 1 valid unordered pair;\n[1,2,1] having 1 valid unordered pairs; \n[2,1,1] having 1 valid unordered pair; \n[1,2,1,1] having 3 valid unordered pairs. \n\nSo the answer is 6 .\n```\n\n**Input Format**\n```\nThe first line of each contains a single integer n.\nThe second line of each test case contains n integers denoting the array arr\n```\n**Output Format**\n```\nA single integer \u2014 the sum of the weight of all subsegments of arr.\n```\n**Constraints**\n\n`1 <= n <= 10^5`\n\n`1 <= arr[i] <= 10^9`",
    "title": "Subsegments Sum",
    "default_testcase": {
        "id": 7512,
        "input": "4\n1 2 1 1",
        "expected_output": "6\n",
        "code_problem_id": 831,
        "created_at": "2024-04-28T09:15:24.751Z",
        "updated_at": "2024-04-28T09:15:24.751Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 2721,
            "code_problem_id": 831,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "\n\n\nclass Solution{\npublic:\n\n\n\n\n\n\n\n\nlong long SubsegSum(int n, vector<int>&arr)\n{\n\n",
            "skeleton_class_end": "}\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 2723,
            "code_problem_id": 831,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public long SubsegSum(int n, int[] arr) {",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 2724,
            "code_problem_id": 831,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def SubsegSum(self, n, arr):",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 2725,
            "code_problem_id": 831,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    SubsegSum(n, arr) {",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        }
    ]
}