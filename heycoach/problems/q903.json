{
    "id": 903,
    "description": "A **ramp** in an integer array `nums` is a pair `(i, j)` for which `i < j` and `nums[i] <= nums[j]`. The **breadth** of such a **ramp** is `j - i`. Given an integer array `nums`, return *the **maximum** **breadth** of a **ramp** in nums. If there is no **ramp** in nums, return 0.*\n\n \n**Example 1:**\n```\nInput: n = 6, nums = [6,0,8,2,1,5]\n\nOutput: 4\n\nExplanation: The maximum breadth ramp is achieved at (i, j) = (1, 5): nums[1] = 0 and nums[5] = 5.\n```\n**Example 2:**\n```\nInput: n = 10, nums = [9,8,1,0,1,9,4,0,4,1]\n\nOutput: 7\n\nExplanation: The maximum breadth ramp is achieved at (i, j) = (2, 9): nums[2] = 1 and nums[9] = 1.\n ```\n**Input Format**\n```\nFirst line contains the integer n denoting length of the nums\nSecond line contains n space separated integers denoting the array nums\n```\n**Output Format**\n```\nA single integer denoting the maximum breadth of a ramp\n```\n**Constraints:**\n\n`2 <= nums.length <= 5 * 10^4`\n\n`0 <= nums[i] <= 5 * 10^4`",
    "title": "Maximum Possible Breadth of Ramp",
    "default_testcase": {
        "id": 8046,
        "input": "6\n6 0 8 2 1 5",
        "expected_output": "4\n",
        "code_problem_id": 903,
        "created_at": "2024-05-18T15:58:21.310Z",
        "updated_at": "2024-05-18T15:58:21.310Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 3005,
            "code_problem_id": 903,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution{\npublic:\n\n   int maxBreadthRamp(int n, vector<int>& nums){\n\n\n\n\n",
            "skeleton_class_end": "}\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 3006,
            "code_problem_id": 903,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "\nclass Solution {\n    public int maxBreadthRamp(int n, int[] nums) {",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 3007,
            "code_problem_id": 903,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def maxBreadthRamp(self, n, nums):",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 3008,
            "code_problem_id": 903,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    maxBreadthRamp(n, nums) {",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        }
    ]
}