{
    "id": 224,
    "description": "Given an array of integers  `nums`  sorted in non-decreasing order, find the starting and ending position of a given  `target`  value.\n\nIf  `target`  is not found in the array, return  `[-1, -1]`.\n\nYou must write an algorithm with `O(log n)`  runtime complexity.\n### Example 1 \n\n### Input\n```CPP\nnums = [5,7,7,8,8,10], target = 8\n```\n### Output \n```CPP\n[3,4]\n```\n### Explanation\n\nthe first occurrence of 8 is at index 3 and last occurrence of 8 is at index 4 (0-based indexing).\n\n**Example 2:**\n\n**Input:**\n```CPP\nnums = [5,7,7,8,8,10], target = 6\n```\n**Output:** \n```CPP\n[-1,-1]\n```\n\n\n### Constraints:\n-   `1 <= nums.length <= 10000`\n-   `-1000000000 <= nums[i] <= 1000000000`\n-   `nums`  is a non-decreasing array.\n-   `-100000000 <= target <= 100000000`",
    "title": "Range of an element",
    "default_testcase": {
        "id": 1587,
        "input": "6 8\n5 7 7 8 8 10",
        "expected_output": "3 4 ",
        "code_problem_id": 224,
        "created_at": "2022-10-31T14:47:35.875Z",
        "updated_at": "2022-10-31T14:47:35.875Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 324,
            "code_problem_id": 224,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\npublic:\n    vector<int> searchRange(vector<int>& nums, int target) {\n      // write your code here\n    }\n};"
        }
    ]
}