{
    "id": 562,
    "description": "You are given an array nums consisting of integers. Your task is to find and return the maximum product of three non-overlapping subarrays of nums. The length of each subarray should be k, and they should not overlap.\n\n \n\n\n#### `Sample Input:`\n```\n6 2\n1 2 3 4 5 6\n```\n#### `Sample Output:`\n```\n\n720\n```\n\n#### `Constraints:`\n\n- `The length of nums is a multiple of k and satisfies 1 <= k <= 20.`\n\n- `-1,000 <= nums[i] <= 1,000`\n#### `Hints:-`\n```\nFind the maximum product of three non-overlapping subarrays of length k in the array nums.\nReturn the maximum product.\n```\n#### `Explanation:`  \n`Your function should return the maximum product of three non-overlapping subarrays of length 2, i.e., subarrays [1, -2], [2, -1], and [3].`\n",
    "title": "Maximum Product",
    "default_testcase": {
        "id": 3763,
        "input": "6 2\n1 2 3 4 5 6",
        "expected_output": "720\n",
        "code_problem_id": 562,
        "created_at": "2024-01-15T05:47:31.010Z",
        "updated_at": "2024-01-15T05:47:31.010Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 1693,
            "code_problem_id": 562,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution {\npublic:\n    static long long maxProduct(const std::vector<int>& nums, int k) {\n      //Write your code here",
            "skeleton_class_end": "   }\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 1694,
            "code_problem_id": 562,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public static long maxProduct(int[] nums, int k) {\n      //Write your code here",
            "skeleton_class_end": "   }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 1695,
            "code_problem_id": 562,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def maxProduct(nums, k):",
            "skeleton_class_end": null,
            "skeleton_solution_class": ""
        },
        {
            "id": 2396,
            "code_problem_id": 562,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\nfunction maxProduct(nums, k) {",
            "skeleton_class_end": "   }\n}",
            "skeleton_solution_class": ""
        }
    ]
}