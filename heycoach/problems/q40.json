{
    "id": 40,
    "description": "There is a shop which has N distinct products labelled from **1 to N**. You went to shopping and encounter this shop and you liked all of its products so you wanted to buy all of it but you have only **N-1** shopping bags and a shopping bag can contain only 1 product at a time so you decided to left one of the product and purchased the remaining N - 1 products. You have given the array of products consisting of N - 1 products that you bought and you have to return the **product you left out** in the shop. \n\n\n\n### Example 1 \n\n### Input\n```CPP\nproducts = [7,4,8,1,2,5,6]\n``` \n### Output \n```CPP \n3\n``` \n#### Explanation:\n\nInitially there were 8 products: 1,2,3,4,5,6,7,8 from which you bought 1,2,4,5,6,7,8 so the product you left out was the 3rd product.\n\n\n### Example 2 \n\n### Input\n```CPP\nproducts = [1,3,5,2]\n``` \n### Output \n```CPP \n4\n``` \n#### Explanation:\n\nInitially there were 5 products: 1,2,3,4,5 from which you bought 1,2,3,5 so the product you left out was the 4th product.\n\n\n### Constraints:\n\n* 1 <= N <= 10000\n* 1 <= products[i] <= N \n* products.size() == N - 1\nproducts array contain **distinct** integers \n\n\n\n\n",
    "title": "Find the left out product",
    "default_testcase": null,
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 5,
            "code_problem_id": 40,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution\n{\npublic:\n\tint leftOutProduct(vector<int> &products) {\n\n\t\tint n = products.size() + 1;\n\n\t\tint x = 0;\n\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tx ^= i;\n\n\t\t}\n\n\n\t\tfor (int i = 0; i < n - 1; i++) x ^= products[i];\n\n\t\treturn x;\n\t}\n};"
        },
        {
            "id": 465,
            "code_problem_id": 40,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "\nclass Solution {\n    public int leftOutProduct(List<Integer> products) {\n      // write your code here\n    }\n}\n"
        }
    ]
}