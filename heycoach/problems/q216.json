{
    "id": 216,
    "description": "\nYou are given a `0-indexed` integer array nums consisting of 3 \\* n elements.\n\nYou are allowed to remove any `subsequence` of elements of size `exactly` n from nums. The remaining 2 \\* n elements will be divided into two `equal` parts:\n\nThe first n elements belonging to the first part and their sum is sumfirst.\nThe next n elements belonging to the second part and their sum is sumsecond.\nThe difference in sums of the two parts is denoted as sumfirst - sumsecond.\n\nFor example, if sumfirst = 3 and sumsecond = 2, their difference is 1.\nSimilarly, if sumfirst = 2 and sumsecond = 3, their difference is -1.\nReturn the minimum difference possible between the sums of the two parts after the removal of n elements.\n\n### Example 1\n\n### Input\n\n```CPP\nnums = [3,1,2]\n```\n\n### Output\n\n```CPP\n-1\n```\n\n### Explanation:\n\nHere, nums has 3 elements, so n = 1.\nThus we have to remove 1 element from nums and divide the array into two equal parts.\n\n- If we remove nums[0] = 3, the array will be [1,2]. The difference in sums of the two parts will be 1 - 2 = -1.\n- If we remove nums[1] = 1, the array will be [3,2]. The difference in sums of the two parts will be 3 - 2 = 1.\n- If we remove nums[2] = 2, the array will be [3,1]. The difference in sums of the two parts will be 3 - 1 = 2.\n  The minimum difference between sums of the two parts is min(-1,1,2) = -1.\n\n### Example 2\n\n### Input\n\n```CPP\nnums = [7,9,5,8,1,3]\n```\n\n### Output\n\n```CPP\n1\n```\n\n### Explanation:\n\nHere n = 2. So we must remove 2 elements and divide the remaining array into two parts containing two elements each.\n\nIf we remove nums[2] = 5 and nums[3] = 8, the resultant array will be [7,9,1,3]. The difference in sums will be (7+9) - (1+3) = 12.\n\nTo obtain the minimum difference, we should remove nums[1] = 9 and nums[4] = 1.\nThe resultant array becomes [7,5,8,3]. The difference in sums of the two parts is (7+5) - (8+3) = 1.\n\nIt can be shown that it is not possible to obtain a difference smaller than 1.\n\n### Constraints:\n\n- nums.length == 3 \\* n\n- 1 <= n <= 105\n- 1 <= nums[i] <= 105\n",
    "title": "Minimum Diff",
    "default_testcase": null,
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 418,
            "code_problem_id": 216,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "\nclass Solution {\npublic:\n  void solve(vector<int> &arr) {\n    \n  } \n};\n"
        },
        {
            "id": 425,
            "code_problem_id": 216,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "\nclass Solution {\n  public void solve(Vector<Integer> arr) {\n\t\n  } \n}\n"
        },
        {
            "id": 432,
            "code_problem_id": 216,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution:\n    def solve(self, arr):\n        pass\n"
        }
    ]
}