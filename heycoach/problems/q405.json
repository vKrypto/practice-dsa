{
    "id": 405,
    "description": "Given a number 'n' representing a pair of paranthesis(closed and open) your task is to print the total number of of balanced parenthesis pairs possible. A balanced parenthesis refer to the proper nesting and matching of open and close parentheses in an expression. An expression is considered balanced if every opening parenthesis has a corresponding closing parenthesis.\n\nFor Example:\n\n(), ((())), ()()(), (())()) are all examples of balanced parenthesis.\n\n(, ((), )(((, ((( are all examples of unbalanced parenthesis.\n\nConstraints:\n1<=n<=12\n\nSample Input :\n\n3\n\nSample Output:\n\n((())), ()()(), (())(), ()(()), (()()) are all possible balanced parenthesis so the output should be 5.",
    "title": "Balanced Paranthesis",
    "default_testcase": {
        "id": 2528,
        "input": "3",
        "expected_output": "5\n",
        "code_problem_id": 405,
        "created_at": "2023-11-21T05:25:22.683Z",
        "updated_at": "2023-11-21T05:25:22.683Z"
    },
    "problem_type": "session_assignment",
    "code_skeletons": [
        {
            "id": 992,
            "code_problem_id": 405,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution{\n    static int cnt=0;\n    static int printParenthesis(int n) {\n      //Write your code here",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 995,
            "code_problem_id": 405,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    constructor() {\n        this.cnt = 0;\n    }\n\n    printParenthesis(n) {\n      //Write your code here\n      //Write your code here;",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 997,
            "code_problem_id": 405,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def __init__(self):\n        self.cnt = 0\n\n    def printParenthesis(self, n):\n        #Write your code here",
            "skeleton_class_end": null,
            "skeleton_solution_class": ""
        },
        {
            "id": 999,
            "code_problem_id": 405,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution{\npublic:\nint cnt=0;\nint printParenthesis(int n)\n{\n  //Write your code here;",
            "skeleton_class_end": "}\n};",
            "skeleton_solution_class": ""
        }
    ]
}