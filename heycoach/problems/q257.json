{
    "id": 257,
    "description": "Given a Binary Tree, find **`Left view`** of it. Left view of a Binary Tree is set of nodes visible when tree is viewed from Left side.\n\n#### `Example 1`\n\n#### `Input`\n\n```CPP\nroot = [1,2,3,null,5,null,4]\n```\n\n#### `Output`\n\n```CPP\n\n[1,2,5]\n```\n\n#### `Example 2`\n\n#### `Input`\n\n```CPP\nroot = [1,null,3]\n```\n\n#### `Output`\n\n```CPP\n [1,3]\n```\n\n#### `Input Format`\n\n```\nSingle line contaning Root of tree\n```\n\n#### `Output Format`\n\n```CPP\nAn integer Array, denoting leftside view of the tree\n```\n\n#### `Constraints:`\n\n- `The number of nodes in the tree is in the range [0, 100]`\n\n- `100 <= Node.val <= 100`\n",
    "title": "Left View",
    "default_testcase": {
        "id": 6489,
        "input": "[1,2,3,null,5,null,4]",
        "expected_output": "[1, 2, 5]\n",
        "code_problem_id": 257,
        "created_at": "2024-03-13T13:16:13.495Z",
        "updated_at": "2024-03-13T13:16:13.495Z"
    },
    "problem_type": "level_test",
    "code_skeletons": [
        {
            "id": 454,
            "code_problem_id": 257,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "/*class TreeNode {\npublic:\n    int val;\n    TreeNode *left, *right;\n    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n};*/\nclass Solution {\npublic:\n    vector<int> leftSideView(TreeNode* root) {\n      //Write your code here",
            "skeleton_class_end": "    }\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 675,
            "code_problem_id": 257,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "/*class TreeNode {\n    int val;\n    TreeNode left, right;\n    TreeNode(int x) { val = x; }\n}*/\nclass Solution {\n    public List<Integer> leftSideView(TreeNode root) {\n      //Write your code here",
            "skeleton_class_end": "  }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 846,
            "code_problem_id": 257,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "'''\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\n'''\nclass Solution:\n    def leftSideView(self, root):\n      #Write your code here",
            "skeleton_class_end": null,
            "skeleton_solution_class": ""
        },
        {
            "id": 861,
            "code_problem_id": 257,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "/*class TreeNode {\n  constructor(val, left = null, right = null) {\n    this.val = val;\n    this.left = left;\n    this.right = right;\n  }\n}*/\n\nclass Solution {\n  leftSideView(root) {",
            "skeleton_class_end": "  }\n}",
            "skeleton_solution_class": ""
        }
    ]
}