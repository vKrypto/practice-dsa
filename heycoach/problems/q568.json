{
    "id": 568,
    "description": "You are given an array of integers nums of length n.  \nThe cost of an array is the value of its first element. For example, the cost of [1,2,3] is 1 while the cost of [3,4,1] is 3.  \nYou need to divide nums into 3 disjoint contiguous subarrays.\n\nReturn the minimum possible sum of the cost of these subarrays.\n### `Input Format:`\n\n```\nFirst line of input contains a single integer n (3<=n<=100)\nSecond Line of input contains n integers A1, A2,...., An (1<=A[i]<=1000)\n```\n\n### `Output Format:`\n\n`You have to print the minimum possible sum of the cost of the 3 subarrays.`\n\n\n \n#### `Sample Input`\n\n```\n4\n1 2 3 12\n```\n#### `Sample Output`\n```\n6\n```",
    "title": "Divide the Array with Minimum Cost",
    "default_testcase": {
        "id": 3808,
        "input": "10\n23 12 32 12 3 54 23 453 45 23",
        "expected_output": "38\n",
        "code_problem_id": 568,
        "created_at": "2024-01-21T09:32:53.397Z",
        "updated_at": "2024-01-21T09:32:53.397Z"
    },
    "problem_type": "session_assignment",
    "code_skeletons": [
        {
            "id": 1702,
            "code_problem_id": 568,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution{\npublic:\n    int minimumCost(vector<int> &nums){\n      //Write your code here",
            "skeleton_class_end": "  }\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 1703,
            "code_problem_id": 568,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public int minimumCost(int[] nums) {",
            "skeleton_class_end": "    }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 1704,
            "code_problem_id": 568,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def minimumCost(self, nums):",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 1871,
            "code_problem_id": 568,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n  minimumCost(nums) {",
            "skeleton_class_end": "     }\n}",
            "skeleton_solution_class": ""
        }
    ]
}