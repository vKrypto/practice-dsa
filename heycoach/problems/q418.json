{
    "id": 418,
    "description": "You are given the head of a doubly linked list. Your task is to implement a function addVal that adds a node with a given value at the beginning, middle, and end of the list.\n\n**NOTE** : `Follow the order strictly first insert at beginning, then at middle, then at the end.`\n\nThe doubly linked list is defined as follows:\n\n**Input**:\n\n**head**: The head of the doubly linked list (1 <= nodes in the list <= 1000).\n**val**: The value to be inserted into the list (-1000 <= val <= 1000).\n\n**Output**:\n\nReturn the head of the modified doubly linked list.</br>\n\n**Examples**:</br>\n\n**Example 1:**\n\n**Input**: Linkedlist = 2 4 5 -1,  val = 5</br>\n**Output**: 5 2 5 4 5 5\n\n**Example 2:**</br>\n\n**Input**: Linkedlist = 1 2 -1,  val = 9</br>\n**Output**: 9 1 9 2 9\n\n**Constraints**:</br>\nThe linked list is non-empty.</br>\nThe values in the linked list are integers.</br>\nThe list can have up to 1000 nodes.",
    "title": "insertion at beginning, middle, end",
    "default_testcase": {
        "id": 2898,
        "input": "1 2 -1\n9",
        "expected_output": "9 1 9 2 9 \n",
        "code_problem_id": 418,
        "created_at": "2023-12-11T18:40:11.373Z",
        "updated_at": "2023-12-11T18:40:11.373Z"
    },
    "problem_type": "session_assignment",
    "code_skeletons": [
        {
            "id": 1126,
            "code_problem_id": 418,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "/*// Definition for doubly-linked list.\nstruct ListNode {\n    int val;\n    ListNode* prev;\n    ListNode* next;\n    ListNode(int x) : val(x), prev(nullptr), next(nullptr) {}\n};\n*/\nclass Solution {\npublic:\n    ListNode* addVal(ListNode* head, int val) {\n        \n    ",
            "skeleton_class_end": "}\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 1127,
            "code_problem_id": 418,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "/*// Definition for doubly-linked list.\nclass ListNode {\n    int val;\n    ListNode prev;\n    ListNode next;\n\n    ListNode(int x) {\n        val = x;\n    }\n}*/\nclass Solution {\n    public ListNode addVal(ListNode head, int val) {\n       \n    ",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 1128,
            "code_problem_id": 418,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "'''class ListNode:\n    def __init__(self, x):\n        self.val = x\n        self.prev = None\n        self.next = None'''\nclass Solution:\n    def addVal(self, head, val):",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 1129,
            "code_problem_id": 418,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "/*\nclass ListNode {\n    constructor(x) {\n        this.val = x;\n        this.prev = null;\n        this.next = null;\n    }\n}\n*/\n\n\nclass Solution {\n    addVal(head, val) {\n      //Write your cod ehere",
            "skeleton_class_end": "  }\n};",
            "skeleton_solution_class": ""
        }
    ]
}