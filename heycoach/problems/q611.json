{
    "id": 611,
    "description": "You are given an m x n grid where each cell can have one of three values:  \n0 representing an empty cell,  \n1 representing a fresh orange, or  \n2 representing a rotten orange.  \nEvery minute, any fresh orange that is 4-directionally adjacent to a rotten orange becomes rotten.\n\n`Return the minimum number of minutes that must elapse until no cell has a fresh orange. If this is impossible, return -1.`\n\n###    `Sample Input and Output `\n \n#### `Sample Input 1`\n\n```\ngrid = [[2,1,1],[1,1,0],[0,1,1]]\n```\n#### `Sample Output 1`\n```\n4\n```\n#### `Sample Input 2`\n\n```\ngrid = [[2,1,1],[0,1,1],[1,0,1]]\n```\n#### `Sample Output 2`\n```\n-1\n```\n\n",
    "title": "Rotten Oranges",
    "default_testcase": {
        "id": 3992,
        "input": "3 3\n2 1 1\n1 1 0\n0 1 1",
        "expected_output": "4\n",
        "code_problem_id": 611,
        "created_at": "2024-01-22T13:41:48.987Z",
        "updated_at": "2024-01-22T13:41:48.987Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 1840,
            "code_problem_id": 611,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution\n{\npublic:\n    int orangesRotting(vector<vector<int>> &grid)\n    {",
            "skeleton_class_end": "}\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 1841,
            "code_problem_id": 611,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public int orangesRotting(int[][] grid) {",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 1842,
            "code_problem_id": 611,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def orangesRotting(self, grid):",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 1874,
            "code_problem_id": 611,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    orangesRotting(grid) {",
            "skeleton_class_end": "    }\n}",
            "skeleton_solution_class": ""
        }
    ]
}