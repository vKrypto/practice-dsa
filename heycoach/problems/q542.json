{
    "id": 542,
    "description": "Sam is very much interested in Athletics , currently he is in 8th class and he wants to know in which position he lies in a 100m race time when section A and B both are combined . You are given Sam\u2019s finish time X and the finish times of the students of both sections in the form of two BST\u2019s. Return the position at which Sam will lie if both the sections are combined.\n\n```\nNote: If two people or more have finish time value equal to X then return the first index of occurrence of X.\n```\n\n```\nSample Input:   \n1  \n2 1 3  \n2 1 3  \n3\n\nSample Output:          \n5\n```",
    "title": "Position of X in combined sections ",
    "default_testcase": {
        "id": 3614,
        "input": "1\n2 1 3 \n2 1 3\n3",
        "expected_output": "5\n",
        "code_problem_id": 542,
        "created_at": "2024-01-06T17:03:36.840Z",
        "updated_at": "2024-01-06T17:03:36.840Z"
    },
    "problem_type": "session_assignment",
    "code_skeletons": [
        {
            "id": 1622,
            "code_problem_id": 542,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution\n{\n    public:\n    //Function to return a list of integers denoting the node \n    //values of both the BST in a sorted order.\n\n    int merge(Node *root1, Node *root2,int n)\n    {\n       //Your code here\n      \n    }\n};\n"
        },
        {
            "id": 1623,
            "code_problem_id": 542,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "\nclass Solution:\n\n    def merge(self, root1, root2, n):\n"
        }
    ]
}