{
    "id": 717,
    "description": "Given the *head* of a singly linked list, group all the nodes with odd indices together followed by the nodes with even indices, and return the head of the *reordered list*.\n\nThe first node is considered **odd**, and the second node is **even**, and so on.\n\nNote that the relative order inside both the even and odd groups should remain as it was in the input.\n\nYou must solve the problem in `O(1)` extra space complexity and `O(n)` time complexity.\n\n#### Input Format:\n*first line consists of single integer `n`(size of the linked list)*\n*second line consists of `n` single space integers (elements of the list)*\n\n#### Output Format:\nReturn the head of the Final Linked list.\n\n#### Example:\n**Input**:\n\n`5`  \n`1 2 3 4 5`\n\n**Output**:  \n`1 3 5 2 4`\n\n\n#### Constraints:\n- *`0<n<10000`*\n- *`-10^6 <= Node.val <= 10^6`*",
    "title": "Odd Even Linked List",
    "default_testcase": {
        "id": 4847,
        "input": "5\n1 2 3 4 5",
        "expected_output": "1 3 5 2 4 ",
        "code_problem_id": 717,
        "created_at": "2024-02-01T12:26:28.246Z",
        "updated_at": "2024-02-01T12:26:28.246Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 2292,
            "code_problem_id": 717,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class ListNode {\npublic:\n    int val;\n    ListNode *next;\n    ListNode(int x) : val(x), next(nullptr) {}\n};\n\nclass Solution {\npublic:\n    ListNode* oddEvenList(ListNode* head) {",
            "skeleton_class_end": "   }\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 2293,
            "code_problem_id": 717,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "\nclass ListNode {\n    int val;\n    ListNode next;\n    ListNode(int x) { val = x; }\n}\n\nclass Solution {\n    public ListNode oddEvenList(ListNode head) {",
            "skeleton_class_end": "   }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 2294,
            "code_problem_id": 717,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class ListNode:\n    def __init__(self, val=0):\n        self.val = val\n        self.next = None\n\nclass Solution:\n    def oddEvenList(self, head):",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 2295,
            "code_problem_id": 717,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class ListNode {\n    constructor(val = 0, next = null) {\n        this.val = val;\n        this.next = next;\n    }\n}\n\nclass Solution {\n    oddEvenList(head) {",
            "skeleton_class_end": "    }\n}",
            "skeleton_solution_class": ""
        }
    ]
}