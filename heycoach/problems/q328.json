{
    "id": 328,
    "description": " Given two strings text1 and text2, return the length of their longest common subsequence. If there is no common subsequence, return 0.\nA subsequence of a string is a new string generated from the original string with some characters (can be none) deleted without changing the relative order of the remaining characters.\nFor example, \"ace\" is a subsequence of \"abcde\".\nA common subsequence of two strings is a subsequence that is common to both strings.\n\nConstraints :\n\n1 <= text1.length, text2.length <= 1000\n\ntext1 and text2 consist of only lowercase English characters.\n\nInput: text1 = \"abcde\", text2 = \"ace\" \n\nOutput: 3 \n\nInput: text1 = \"abc\", text2 = \"abc\"\n\nOutput: 3\n",
    "title": "longest common subsequence",
    "default_testcase": null,
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 783,
            "code_problem_id": 328,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "def lcs(s1, s2):\n"
        },
        {
            "id": 784,
            "code_problem_id": 328,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "function lcs(s1, s2) {\n}\n\n"
        },
        {
            "id": 785,
            "code_problem_id": 328,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "public class LongestCommonSubsequence {\n    public static int lcs(String s1, String s2) {\n    }\n}\n"
        },
        {
            "id": 786,
            "code_problem_id": 328,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "int lcs(string s1, string s2) {\n}\n"
        }
    ]
}