{
    "id": 187,
    "description": "Given an array of 0s and 1s, we need to write a program to find the minimum number of swaps required to group all 1s present in the array together.\n**Note**: If no `1s` are present then return `-1`\n\n### Example 1 \n\n### Input\n```CPP\narr= [1, 0, 1, 0, 1]\n```\n### Output \n```CPP\n1\n```\n### Explanation\nOnly 1 swap is required to group all 1's together. Swapping index 1 and 4 will give arr[] = {1, 1, 1, 0, 0}.(0-based indexing)\n\n**Example 2:**\n\n**Input:**\n```CPP\narr= [1, 0, 1, 0, 1, 1]\n```\n**Output:** \n```CPP\n1\n```\n\n### Constraints:\n* `1 <= n <= 10000`\n*  `0 <= arr[i] <= 1`",
    "title": "Bring all ones together",
    "default_testcase": {
        "id": 1357,
        "input": "5\n1 0 1 0 1",
        "expected_output": "1",
        "code_problem_id": 187,
        "created_at": "2022-10-27T17:19:56.020Z",
        "updated_at": "2022-10-27T17:19:56.020Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 252,
            "code_problem_id": 187,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\npublic:\n    int minSwaps(int arr[], int n) {\n      // write your code here\n    }\n};\n"
        }
    ]
}