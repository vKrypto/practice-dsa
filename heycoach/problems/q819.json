{
    "id": 819,
    "description": "Your Tutor is using PsuedoCode to explain you looping. He has chosen an array A that consists of n elements and for that he has provided you with a psuedocode written in the following manner:\n\n```\nresult = 0\nwhile A  is not empty:\n    B = []\n    for x in A, y in A:\n        if x != y: append absolute_value(x - y) to B\n    A = B\n    result = result + 1\n```\n\n\nHe has assigned you the task of figuring out 'result' at the end of the program. If the loop is infinite print \"INFINITE\".\n\nInput Format:\n\nThe first line contains a single integer denoting the size of the array.\n\nThe second line contains 'n' space separated integers denoting the elements of the array.\n\nOutput Format:\n\nPrint the value of result and if the loop runs infinitely then print \"INFINITE\".\n\nSample Input:\n\n3\n\n1 3 4\n\nSample Output:\n\n4\n\nExplanation:\n\nAfter the loop ends first time our A would be [2,3,2,1,3,1]. After the second time the loop ends, you will notice that our array would only contain 1s and 2s. Then at the end of the third iteration it will just contain 1s. The fourth loop will ends and the A is now empty thus we are done with looping. The result is now equal to 4 and that is the output.\n\nConstraints:\n\n1<=n<=10^5\n\n1<=a[i]<=10^4\n\n\n",
    "title": "PsuedoCode Implementation",
    "default_testcase": {
        "id": 7399,
        "input": "4\n1 3 5 7",
        "expected_output": "4\n",
        "code_problem_id": 819,
        "created_at": "2024-04-26T13:01:24.020Z",
        "updated_at": "2024-04-26T13:01:24.020Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 2662,
            "code_problem_id": 819,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution{\n    public:\n    int solve(int size, int ar[]){\n      //Write your code here",
            "skeleton_class_end": "    }\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 2663,
            "code_problem_id": 819,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public int solve(int size, int[] ar) {\n      //Write your code here",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 2664,
            "code_problem_id": 819,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def solve(self, size, ar):\n      #Write your code here",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 2665,
            "code_problem_id": 819,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    solve(size, ar) {\n      //Write your code here",
            "skeleton_class_end": "    }\n}",
            "skeleton_solution_class": ""
        }
    ]
}