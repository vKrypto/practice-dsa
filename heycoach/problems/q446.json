{
    "id": 446,
    "description": "Given the root of a binary tree, return the inorder traversal of its nodes' values.\n\n**`Example 1:`**\n\n**`Input`**:\n\n\n`[1,2,3,4,5,null,null,null,null,null,null]`\n\n**`Output:`** \n```\n[4,2,5,1,3]\n    1\n   / \\\n  2   3\n / \\\n4   5\n```\n**`Example 2:`**\n\n**`Input:`**\n```\n[10,5,20,3,7,null,25,null,null,null,null,null,null]\n```\n\n**`Output:`**\n``` \n[3,5,7,10,20,25]\n\n    10\n    /  \\\n   5    20\n  / \\     \\\n 3   7     25\n```\n\n**`Constraints`**:</br>\n- `The number of nodes in the tree is in the range [0, 100].`</br>\n- `-100 <= Node.val <= 100`",
    "title": "Inorder traversal of binary tree",
    "default_testcase": {
        "id": 5784,
        "input": "1 2 3 4 5 -1 -1 -1 -1 -1 -1",
        "expected_output": "4 2 5 1 3 ",
        "code_problem_id": 446,
        "created_at": "2024-02-17T13:18:23.787Z",
        "updated_at": "2024-02-17T13:18:23.787Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 1269,
            "code_problem_id": 446,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    inorderTraversal(root) {\n      //Write your code here",
            "skeleton_class_end": " }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 1270,
            "code_problem_id": 446,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "def inorder_traversal(root):",
            "skeleton_class_end": null,
            "skeleton_solution_class": ""
        },
        {
            "id": 1271,
            "code_problem_id": 446,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": " class Solution {\n  public void inorderTraversal(TreeNode root) {\n    //Write your code here",
            "skeleton_class_end": "   }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 1272,
            "code_problem_id": 446,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution {\n    public:\nvoid inorderTraversal(TreeNode* root) {",
            "skeleton_class_end": "    }\n};",
            "skeleton_solution_class": ""
        }
    ]
}