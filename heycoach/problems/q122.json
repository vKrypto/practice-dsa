{
    "id": 122,
    "description": "Brijesh is thinking something opposite as **valid parenthesis** is very famous question. So now he wants to make all the valid parentheses from a integer **n**. You have to help him in solving this problem. \nPrint all the *combinations of well-formed parentheses*.\n\n#### Input Format: \n- first and only line contains an integer n.\n\n#### Output Format:\n- print all the combinations of parentheses with single space seperated.\n\n#### Example:\n#### Input : \n3\n\nOutput: \n\n((())) (()()) (())() ()(()) ()()()\n\n#### Constraints:\n- 1 <= n <= 8\n",
    "title": "Generate Parentheses",
    "default_testcase": {
        "id": 875,
        "input": "2",
        "expected_output": "(()) ()() ",
        "code_problem_id": 122,
        "created_at": "2022-10-10T11:00:37.487Z",
        "updated_at": "2022-10-10T11:00:37.487Z"
    },
    "problem_type": "level_test",
    "code_skeletons": [
        {
            "id": 136,
            "code_problem_id": 122,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution {\n  public:\n  vector<string> generateParenthesis(int n) {\n    //Write your code here;",
            "skeleton_class_end": "  }\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 137,
            "code_problem_id": 122,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public List<String> generateParenthesis(int n) {\n      //Write your code here;",
            "skeleton_class_end": "    }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 138,
            "code_problem_id": 122,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def generateParenthesis(self, n):\n      #Write your code here",
            "skeleton_class_end": null,
            "skeleton_solution_class": ""
        },
        {
            "id": 612,
            "code_problem_id": 122,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution{\n      generateParenthesis(n) {\n        //Write your code here;",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        }
    ]
}