{
    "id": 936,
    "description": "A set of sensors sends temperature data at irregular intervals. You need to fill in missing data points with the average of their neighbors.\n\nGiven an array with some None values, replace each None with the average of the nearest non-None neighbors.\n\n#### Sample Input:\n\n```\n[20, None, 30, None, 40]\n```\n\n#### Sample Output: \n```\n[20, 25, 30, 35, 40]\n```\n\n#### Explanation:\n```\nThe first None is replaced by (20 + 30) / 2 = 25, and \nthe second None is replaced by (30 + 40) / 2 = 35.\n```\n\n#### Constraints:\n\n- `The array length will be between 1 and 10^5`\n\n- `The values will be integers between -1000 and 1000 or None.`",
    "title": "Sensor Data Analysis",
    "default_testcase": {
        "id": 8205,
        "input": "3\nNone 10 None",
        "expected_output": "10 10 10 \n",
        "code_problem_id": 936,
        "created_at": "2024-05-22T13:55:38.844Z",
        "updated_at": "2024-05-22T13:55:38.844Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 3109,
            "code_problem_id": 936,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class DataFiller {\npublic:\n    static vector<double> fillMissingData(const vector<double>& data) {",
            "skeleton_class_end": "}\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 3110,
            "code_problem_id": 936,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class DataFiller {\n    public static List<Integer> fillMissingData(List<Double> data) {",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 3111,
            "code_problem_id": 936,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class DataFiller:\n    @staticmethod\n    def fill_missing_data(data):",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 3112,
            "code_problem_id": 936,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class DataFiller {\n    static fillMissingData(data) {",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        }
    ]
}