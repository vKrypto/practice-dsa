{
    "id": 66,
    "description": "Let's call a string s perfectly balanced if for all possible triplets **(t,u,v)** such that **t** is a non-empty substring of **s** and **u** and **v** are characters present in **s**, the difference between the frequencies of **u** and **v** in t is not more than 1.\n\nFor example, the strings \"aba\" and \"abc\" are perfectly balanced but \"abb\" is not because for the triplet (\"bb\",'a','b'), the condition is not satisfied.\n\nYou are given a string s consisting of lowercase English letters only. Your task is to determine whether s is perfectly balanced or not.\n\nA string b is called a substring of another string a if b can be obtained by deleting some characters (possibly 0) from the start and some characters *(possibly 0)* from the end of a.\n\n#### Input\n- The first line of input contains a single integer **t (1\u2264t\u22642\u22c510^4)** denoting the number of testcases.\n\n- Each of the next t lines contain a single string **s (1\u2264|s|\u22642\u22c510^5)**, consisting of lowercase English letters.\n\n- It is guaranteed that the sum of |s| over all testcases does not exceed 2\u22c510^5.\n\n#### Output\n- For each test case, print \"YES\" if s is a perfectly balanced string, and \"NO\" otherwise.",
    "title": "Perfectly Balanced String",
    "default_testcase": null,
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 86,
            "code_problem_id": 66,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\npublic:\n  void solve(string str) {\n    \n  } \n};\n"
        },
        {
            "id": 87,
            "code_problem_id": 66,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\n    public void solve(String str) {\n\n    } \n}\n\n"
        },
        {
            "id": 88,
            "code_problem_id": 66,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution:\n    def solve(self, str):\n        pass\n\n"
        }
    ]
}