{
    "id": 186,
    "description": "\nGiven two strings s1 and s2, print true if s2 contains a permutation of s1, or false otherwise.\n\nIn other words, print true if one of s1's permutations is the substring of s2.\n\n\n#### Example\n #### Input \n\n```\nab \neidbaooo\n```\n\n#### Output \n`true`\n#### Input format: \n`first line contains the two space separated string (s1 and s2 respectively)`\n\n#### Output Format:\n` Print true or false`\n\n#### Constraints:\n \n```\n1 <= s1.length, s2.length <= 10000 *s1 and s2 consist of lowercase English letters.\n\n```\n",
    "title": "Permutation in String",
    "default_testcase": {
        "id": 5546,
        "input": "ab\neidboaoo",
        "expected_output": "false\n",
        "code_problem_id": 186,
        "created_at": "2024-02-15T12:48:21.499Z",
        "updated_at": "2024-02-15T12:48:21.499Z"
    },
    "problem_type": "level_test",
    "code_skeletons": [
        {
            "id": 151,
            "code_problem_id": 186,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution {\npublic:\n    bool checkInclusion(string s1, string s2) {\n      // write your code here",
            "skeleton_class_end": "  }\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 152,
            "code_problem_id": 186,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "\nclass Solution {\n    boolean checkInclusion(String s1, String s2) {\n      // write your code here",
            "skeleton_class_end": "  }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 153,
            "code_problem_id": 186,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def checkInclusion(self, s1, s2):",
            "skeleton_class_end": null,
            "skeleton_solution_class": ""
        },
        {
            "id": 662,
            "code_problem_id": 186,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n      checkInclusion(s1, s2) {\n      // write your code here",
            "skeleton_class_end": "  }\n}",
            "skeleton_solution_class": ""
        }
    ]
}