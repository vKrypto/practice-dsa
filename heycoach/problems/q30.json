{
    "id": 30,
    "description": "Boys and girls, formed a queue of n people in the assembly. Initially the children stood in the order they entered the assembly. However, after a while the boys started feeling awkward for standing in front of the girls in the queue and they started letting the girls move forward each second.\n\nLet's describe the process more precisely. Let's say that the positions in the queue are sequentially numbered by integers from 1 to n, at that the person in the position number 1 is served first. Then, if at time x a boy stands on the i-th position and a girl stands on the (i\u2009+\u20091)-th position, then at time x\u2009+\u20091 the i-th position will have a girl and the (i\u2009+\u20091)-th position will have a boy. The time is given in seconds.\n\nYou've got the initial position of the children, at the initial moment of time. Determine the way the queue is going to look after t seconds.\n\n**`Input:`**\n\n***`The first line contains two integers n and t (1\u2009\u2264\u2009n,\u2009t\u2009\u2264\u200950), which represent the number of children in the queue and the time after which the queue will transform into the arrangement you need to find.`***\n\n***`The next line contains string s, which represents the schoolchildren's initial arrangement. `***\n\n**`Output:`**\n\n***`Return string a, which describes the arrangement after t seconds. ***\n\n\n**`Sample Input:`**  \n`8 3`  \n`BBGBGBGB`  \n\n**`Sample Output:`**\n\n`GGBGBBBB`\n\n**`Sample Input:`**  \n`3 1`  \n`BGG`  \n\n**`Sample Output:`**\n\n`GBG`",
    "title": "School Queue",
    "default_testcase": {
        "id": 165,
        "input": "5 2\nBGGBG",
        "expected_output": "GGBGB\n",
        "code_problem_id": 30,
        "created_at": "2022-09-26T04:45:25.580Z",
        "updated_at": "2022-09-26T04:45:25.580Z"
    },
    "problem_type": "level_test",
    "code_skeletons": [
        {
            "id": 33,
            "code_problem_id": 30,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class solution {\npublic:\nstring solve(int n, int x, string& str){\n    //Write your code here",
            "skeleton_class_end": "     }\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 34,
            "code_problem_id": 30,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def solve(self, n, x, s):",
            "skeleton_class_end": null,
            "skeleton_solution_class": ""
        },
        {
            "id": 35,
            "code_problem_id": 30,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public String solve(int n, int x, String str) {\n      //Write your code here",
            "skeleton_class_end": "     }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 840,
            "code_problem_id": 30,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    solve(n, x, str) {\n      //Write your code here",
            "skeleton_class_end": "     }\n}",
            "skeleton_solution_class": ""
        }
    ]
}