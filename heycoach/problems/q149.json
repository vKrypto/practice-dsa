{
    "id": 149,
    "description": "\nYou are given a string  `s`. We want to partition the string into as many parts as possible so that each letter appears in at most one part.\n\nNote that the partition is done so that after concatenating all the parts in order, the resultant string should be  `s`.\n\nReturn  _a list of integers representing the size of these parts_.\n\n\n### Example 1 \n\n### Input\n```CPP\ns = \"ababcbacadefegdehijhklij\"\n```\n\n\n### Output \n```CPP\n[9,7,8]\n```\n\n#### Explanation:\nThe partition is \"ababcbaca\", \"defegde\", \"hijhklij\".This is a partition so that each letter appears in at most one part.\nA partition like \"ababcbacadefegde\", \"hijhklij\" is incorrect, because it splits s into less parts.\n\n**Example 2:**\n\n**Input:**\n```CPP\ns = \"eccbbbbdec\"\n```\n**Output:** \n```CPP\n[10]\n```\n#### Explanation:\nThe entire string should be considered as one part so that each letter belongs to at most one part.\n\n### Constraints:\n*    `1 <= s.length <= 500`\n*   `s`  consists of lowercase English letters.\n\n\n\n",
    "title": "Partition string",
    "default_testcase": {
        "id": 1089,
        "input": "ababcbacadefegdehijhklij",
        "expected_output": "9 7 8 ",
        "code_problem_id": 149,
        "created_at": "2022-10-20T15:44:12.124Z",
        "updated_at": "2022-10-20T15:44:12.124Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 208,
            "code_problem_id": 149,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\npublic:\n    vector<int> partitionLabels(string s) {\n      // write your code here\n    }\n};"
        },
        {
            "id": 517,
            "code_problem_id": 149,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\n    public List<Integer> partitionLabels(String s) {\n      // write your code here\n    }\n}\n\n"
        }
    ]
}