{
    "id": 292,
    "description": "Given a `n x n` grid filled with non-negative numbers, A explorer is at top left cell and he has to  find a path from top left to bottom right, but there is a condition he has to pay an amount equal to the cell if he choose to include a particular cell in his path, suggest a falling path  which minimizes the money paid by the explorer. The explorer can move down, right or diagonally down.\n\n**Example**\n\n#### `Input:`\n```\n3 3\n1 2 3\n4 5 6\n7 8 9\n```\n#### `Output:` \n`16`\n\n#### Explanation: \n`The explorer will start from matrix[0][0] that is from 2 then move to 5 then finally to 9 which is at matrix[n-1][n-1]. The total cost is 16 which is the minimum possible achievable.`\n\n\n\n#### `Constraints:`\n\n- `n == matrix.length == matrix[i].length`\n\n- `1 <= n <= 100`\n\n- `-100 <= matrix[i][j] <= 100`    \n\n",
    "title": "MIN TAX PAID_II",
    "default_testcase": {
        "id": 6618,
        "input": "4 4\n1 2 10 4\n100 3 2 1\n1 1 20 2\n1 2 2 1",
        "expected_output": "8\n",
        "code_problem_id": 292,
        "created_at": "2024-03-17T11:41:44.719Z",
        "updated_at": "2024-03-17T11:41:44.719Z"
    },
    "problem_type": "session_assignment",
    "code_skeletons": [
        {
            "id": 719,
            "code_problem_id": 292,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    solve(ar, m, n) {\n      //Write your code here",
            "skeleton_class_end": "   }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 720,
            "code_problem_id": 292,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def solve(self, ar, m, n):\n      #Write your code here",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 721,
            "code_problem_id": 292,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public int solve(int[][] ar, int m, int n) {\n      //Write your code here",
            "skeleton_class_end": "   }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 722,
            "code_problem_id": 292,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution {\npublic:\n    int solve(vector<vector<int>>& ar) {\n      // write your code here",
            "skeleton_class_end": "   }    \n};",
            "skeleton_solution_class": ""
        }
    ]
}