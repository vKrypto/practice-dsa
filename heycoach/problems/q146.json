{
    "id": 146,
    "description": "You are given an integer array  `height`  of length  `n`. There are  `n`  vertical lines drawn such that the two endpoints of the  `ith`  line are  `(i, 0)`  and  `(i, height[i])`.\n\nFind two lines that together with the x-axis form a container, such that the container contains the most water.\n\nReturn  _the **maximum** amount of water a container can store_.\n\n**Notice**  that you may not slant the container.\n\n\n### Example 1 \n\n### Input\n```CPP\nheight = [1,8,6,2,5,4,8,3,7]\n```\n\n\n### Output \n```CPP\n49\n```\n\n#### Explanation:\nThe above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, we can create the container  by choosing the 1st line and 8th line (0-based indexing) then the maximum amount of water we can get is 49 unit.\n\n**Example 2:**\n\n**Input:**\n```CPP\nheight = [1,1]\n```\n**Output:** \n```CPP\n1\n```\n#### Explanation:\nwe have only one way to form container that is by choosing the 0th and 1st line so the water it can contain is 1 unit.\n\n### Constraints:\n* 2 \u2264 n \u2264 10000 \n*  0 \u2264 height[i] <= 10000 \n\n\n\n",
    "title": "Container with maximum amount of water",
    "default_testcase": {
        "id": 1070,
        "input": "9\n1 8 6 2 5 4 8 3 7\n",
        "expected_output": "49",
        "code_problem_id": 146,
        "created_at": "2022-10-20T15:24:25.987Z",
        "updated_at": "2022-10-20T15:24:25.987Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 207,
            "code_problem_id": 146,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\npublic:\n    int maxArea(vector<int>& height) {\n      // write your code here\n    }\n};"
        },
        {
            "id": 516,
            "code_problem_id": 146,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\n    public int maxArea(int[] height) {\n      // write your code here\n    }\n}\n\n"
        }
    ]
}