{
    "id": 65,
    "description": "Dholu decided to sneak into Tuntun's room while he is sleeping and change his laptop's password. He already knows the password, which is a string s of length n. He also knows that there are k special letters of the alphabet: c1,c2,\u2026,ck.\n\nDholu made a program that can do the following.\n\nThe program considers the current password s of some length m.\nThen it finds all positions i (1\u2264i<m) such that si+1 is one of the k special letters.\nThen it deletes all of those positions from the password s even if si is a special character. If there are no positions to delete, then the program displays an error message which has a very loud sound.\nFor example, suppose the string s is \"abcdef\" and the special characters are 'b' and 'd'. If he runs the program once, the positions 1 and 3 will be deleted as they come before special characters, so the password becomes \"bdef\". If he runs the program again, it deletes position 1, and the password becomes \"def\". If he is wise, he won't run it a third time.\n\nDholu wants to know how many times he can run the program on Tuntun's laptop without waking him up from the sound of the error message. Can you help him?\n\n#### Input\n- The first line contains a single integer **t (1\u2264t\u226410^5)** \u2014 the number of test cases. Then t test cases follow.\n\n- The first line of each test case contains a single integer **n (2\u2264n\u226410^5)** \u2014 the initial length of the password.\n\n- The next line contains a string s consisting of n lowercase English letters \u2014 the initial password.\n\n- The next line contains an integer **k (1\u2264k\u226426)**, followed by k distinct lowercase letters c1,c2,\u2026,ck \u2014 the special letters.\n\n- It is guaranteed that the sum of n over all test cases does not exceed 2\u22c510^5.\n\n#### Output\n- For each test case, print the maximum number of times Dholu can run the program without displaying the error message, on a new line.",
    "title": "Dorms War",
    "default_testcase": null,
    "problem_type": "practice",
    "code_skeletons": []
}