{
    "id": 973,
    "description": "Given an array of integers nums, where exactly two elements appear only once and all the other elements appear exactly twice, find the two elements that occur only once. You can return the answer in any order.\n\nYou must write an algorithm that runs in linear runtime complexity and uses only constant extra space.\n\nExample 1:\n\nInput: nums = [1,2,1,3,2,5]\n\nOutput: [3,5]\n\nExplanation: [5, 3] is also a valid answer, as these hold unique in the array.\n\nExample 2:\n\nInput: nums = [-1,0]\n\nOutput: [-1,0]\n\nExample 3:\n\nInput: nums = [0,1]\n\nOutput: [1,0]\n\nConstraints:\n\n2 <= nums.length <= 30,000\n\n-2^31 <= nums[i] <= 2^31 - 1\n\nEach integer in nums will appear twice, only two integers will appear once.",
    "title": "Unique Pair Finder",
    "default_testcase": {
        "id": 8493,
        "input": "7\n4 1 1 2 2 3 3",
        "expected_output": "4 and 0\n",
        "code_problem_id": 973,
        "created_at": "2024-05-31T07:42:10.956Z",
        "updated_at": "2024-05-31T07:42:10.956Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 3245,
            "code_problem_id": 973,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution {\npublic:\n    vector<int> singleNumber(vector<int>& nums) {",
            "skeleton_class_end": "    }\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 3246,
            "code_problem_id": 973,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public int[] singleNumber(int[] nums) {",
            "skeleton_class_end": "    }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 3247,
            "code_problem_id": 973,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def singleNumber(self, nums):",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 3248,
            "code_problem_id": 973,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    singleNumber(nums) {",
            "skeleton_class_end": "    }\n}",
            "skeleton_solution_class": ""
        }
    ]
}