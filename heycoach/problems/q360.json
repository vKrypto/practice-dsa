{
    "id": 360,
    "description": "Write a  program to find the shortest path between two nodes in an unweighted graph.\n\nInput:\n\nThe number of nodes (N).\nThe number of edges (E).\nE pairs of integers representing edges.\nTwo integers, source node (S) and destination node (D).\nOutput: Shortest path length between S and D.   \n\nConstraints:\n\n1 <= N <= 10^4 (number of nodes)\n\n0 <= E <= 10^5 (number of edges)\n\n0 <= u, v < N (node indices)\n\nThe graph is guaranteed to be connected.",
    "title": "Shortest Path b/w two nodes",
    "default_testcase": {
        "id": 2230,
        "input": "6 7\n0 1\n0 2\n1 2\n1 3\n2 4\n3 4\n3 5\n0 5",
        "expected_output": "3\n",
        "code_problem_id": 360,
        "created_at": "2023-09-25T23:14:06.370Z",
        "updated_at": "2023-09-25T23:14:06.370Z"
    },
    "problem_type": "session_assignment",
    "code_skeletons": [
        {
            "id": 827,
            "code_problem_id": 360,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution{\n  public:\n    int shortestPath(int N, vector<vector<int>>& edges, int S, int D) {\n",
            "skeleton_class_end": "}\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 859,
            "code_problem_id": 360,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    shortestPath(N, edges, S, D) {",
            "skeleton_class_end": "\n}\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 1097,
            "code_problem_id": 360,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution{\n      public int shortestPath(int N, int[][] edges, int S, int D) {\n        //Write your code here;\n",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 1098,
            "code_problem_id": 360,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def shortest_path(self, N, edges, S, D):",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        }
    ]
}