{
    "id": 704,
    "description": "\nYou are given a triangular array `triangle`. Your task is to return the **minimum path sum** to reach from the top to the bottom row. Path sum is the sum of all elements along the path. The Triangle array will have **N** rows and the ith row , where 0<= i < N will have `i+1` elements. If you are at cell `(i,j)` you can either move to cell `(i+1,j)` or `(i+1,j+1)`.\n\n### Example 1 \n\n### Input\n```CPP \nN = 4\n2 \n3 4\n6 5 7\n4 1 8 3\n\n``` \n### Output \n```CPP \n11\n``` \n#### Explanation:\n\nIn this array, the minimum path will be 2->3->5->1, so the minimum sum path would be 2+3+5+1=11\n\n### Example 2 \n\n### Input\n```CPP\nN = 1\n-10 \n```\n### Output \n```CPP \n-10\n``` \n#### Explanation:\nIn this case, there is one row. Thus, the minimum path will be -10, and the minimum sum path = -10.\n\n### Constraints:\n\n* 1 <= N <= 100\n* -10000 <= triangle[i][j] <= 10000\n\n",
    "title": "Minimum path sum in a triangle",
    "default_testcase": {
        "id": 4615,
        "input": "4\n2 \n3 4\n6 5 7\n4 1 8 3",
        "expected_output": "11\n",
        "code_problem_id": 704,
        "created_at": "2024-01-28T06:47:38.350Z",
        "updated_at": "2024-01-28T06:47:38.350Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 2211,
            "code_problem_id": 704,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "\nclass Solution {\npublic:\n  int minimumPathSum(vector<vector<int>>& triangle, int n) {",
            "skeleton_class_end": "}\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 2212,
            "code_problem_id": 704,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def minimumPathSum(self, triangle, n):",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 2213,
            "code_problem_id": 704,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    minimumPathSum(triangle, n) {",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 2214,
            "code_problem_id": 704,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public int minimumPathSum(int[][] triangle, int n) {",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        }
    ]
}