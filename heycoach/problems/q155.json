{
    "id": 155,
    "description": "\nGiven string num representing a non-negative integer `num`, and an integer `k`, return _the smallest possible integer after removing_  `k`  _digits from_  `num`.\n\n\n### Example 1 \n\n### Input\n```CPP\nnum = \"1432219\", k = 3\n```\n\n\n### Output \n```CPP\n\"1219\"\n```\n\n#### Explanation:\nRemove the three digits 4, 3, and 2 to form the new number 1219 which is the smallest.\n\n**Example 2:**\n\n**Input:**\n```CPP\nnum = \"10200\", k = 1\n```\n**Output:** \n```CPP\n\"200\"\n```\n#### Explanation:\nRemove the leading 1 and the number is 200. Note that the output must not contain leading zeroes.\n\n### Constraints:\n*    `2 <= num.length <= 10000`\n*    k < `num.length`\n*    `num`  consists of only digits.\n*  `num`  does not have any leading zeros except for the zero itself.\n",
    "title": "Minimize number after removing k digits",
    "default_testcase": {
        "id": 1112,
        "input": "1432219\n3",
        "expected_output": "1219",
        "code_problem_id": 155,
        "created_at": "2022-10-22T04:36:02.287Z",
        "updated_at": "2022-10-22T04:36:02.287Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 209,
            "code_problem_id": 155,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\npublic:\n    string removeKdigits(string num, int k) {\n      // write your code here\n    }\n};\n"
        },
        {
            "id": 518,
            "code_problem_id": 155,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\n    public String removeKdigits(String num, int k) {\n      // write your code here\n    }\n}\n\n"
        },
        {
            "id": 1207,
            "code_problem_id": 155,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution:\n    def removeKdigits(self, num, k):"
        },
        {
            "id": 1208,
            "code_problem_id": 155,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\n    removeKdigits(num, k) {\n    }\n}\n"
        }
    ]
}