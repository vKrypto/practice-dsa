{
    "id": 266,
    "description": "\nThere is an undirected `star` graph consisting of n nodes labeled from 1 to n. A star graph is a graph where there is one `center` node and exactly n - 1 edges that connect the center node with every other node.\n\nYou are given a 2D integer array edges where each edges[i] = [ui, vi] indicates that there is an edge between the nodes ui and vi. Return the center of the given star graph.\n\n### Example 1\n\n![image](https://assets.leetcode.com/uploads/2021/02/24/star_graph.png)\n\n### Input\n\n```CPP\nedges = [[1,2],[2,3],[4,2]]\n```\n\n### Output\n\n```CPP\n2\n```\n\n#### Explanation:\n\nAs shown in the figure above, node 2 is connected to every other node, so 2 is the center.\n\n**Input Format:**\n- The first line contains an integer `n`, representing the number of nodes in the star graph.\n- Following this, there are `n - 1` lines, each containing two space-separated integers `ui` and `vi`, representing an edge between the nodes `ui` and `vi`.\n\n**Output Format:**\n- Output a single integer representing the label of the center node in the given star graph.\n\n\n**Sample Input 1:**\n```\n18\n8 2\n8 3\n4 8\n1 8\n8 5\n6 8\n7 8\n9 8\n11 8\n10 8\n8 12\n13 8\n14 8\n8 15\n16 8\n17 8\n8 18\n19 8\n```\n**Sample Output 1:**\n```\n8\n```\n\n\n### Constraints:\n\n- 3 <= n <= 10^5\n- edges.length == n - 1\n- edges[i].length == 2\n- 1 <= u, v <= n\n- u != v\n- The given edges represent a valid star graph.\n",
    "title": "Star graph",
    "default_testcase": {
        "id": 1827,
        "input": "8\n1 2\n2 3\n4 2\n2 5\n2 7\n2 6\n2 9\n8 2\n",
        "expected_output": "2",
        "code_problem_id": 266,
        "created_at": "2022-11-06T09:28:47.971Z",
        "updated_at": "2022-11-06T09:28:47.971Z"
    },
    "problem_type": "level_test",
    "code_skeletons": [
        {
            "id": 367,
            "code_problem_id": 266,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution {\npublic:\n    int findCenter(vector<vector<int>>& e) {",
            "skeleton_class_end": "}\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 630,
            "code_problem_id": 266,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public int findCenter(int[][] e) {",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 631,
            "code_problem_id": 266,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def find_center(self, edges):",
            "skeleton_class_end": null,
            "skeleton_solution_class": ""
        },
        {
            "id": 633,
            "code_problem_id": 266,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "function findCenter(e) {",
            "skeleton_class_end": "}",
            "skeleton_solution_class": ""
        }
    ]
}