{
    "id": 22,
    "description": "Given two strings word1 and word2, return the minimum number of operations required to convert word1 to word2.\n\nYou have the following three operations permitted on a word:\n\n* Insert a character\n* Delete a character\n* Replace a character\n\n\n\n### Example 1 \n\n### Input\n```CPP\nword1 = \"horse\", word2 = \"ros\"\n``` \n### Output \n```CPP \n3\n``` \n#### Explanation:\nhorse -> rorse (replace 'h' with 'r')\nrorse -> rose (remove 'r')\nrose -> ros (remove 'e')\n\n\n\n\n### Example 2 \n\n### Input\n```CPP\n word1 = \"intention\", word2 = \"execution\"\n``` \n### Output \n```CPP \n5\n``` \n#### Explanation:\nintention -> inention (remove 't')\ninention -> enention (replace 'i' with 'e')\nenention -> exention (replace 'n' with 'x')\nexention -> exection (replace 'n' with 'c')\nexection -> execution (insert 'u')\n\n### Constraints:\n\n* 0 <= word1.length, word2.length <= 500\n* word1 and word2 consist of lowercase English letters.\n\n\n",
    "title": "Minimum Steps",
    "default_testcase": null,
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 305,
            "code_problem_id": 22,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "\nclass Solution {\npublic:\n  void solve(string word1,string word2) {\n    \n  } \n};\n\n"
        },
        {
            "id": 309,
            "code_problem_id": 22,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "\npublic class Solution {\n    public void solve(String word1,String word2) {\n        // your code here\n    }\n}"
        },
        {
            "id": 313,
            "code_problem_id": 22,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution:\n    def solve(self, word1, word2):\n        # your code here\n"
        }
    ]
}