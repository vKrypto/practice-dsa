{
    "id": 641,
    "description": "Dholu is very creative and wants to play with strings and he has a very good idea. You have given a string **s**, remove duplicate letters so that every letter appears once and only once. You must make sure your result is the **smallest in lexicographical order** among all possible results.\n\n#### Input Format: \n- first line consists of a string\n\n#### Output Format: \n- print the output string\n\n#### Sample Input:\ncbacdcbc\n\n#### Sample Output:\nabcd\n\nExplanation: Since if we only collect unique letters, they come out to be 'c', 'b', 'a' and 'd' and when they are arranged lexicographically the output is abcd.\n\n#### Constraints: \n- 1<= s.length<= 10000\n\n### Note: Input consists of only lower case letters.",
    "title": "Duplicate Letters",
    "default_testcase": {
        "id": 4288,
        "input": "cbacdcbc",
        "expected_output": "abcd",
        "code_problem_id": 641,
        "created_at": "2024-01-27T10:20:45.541Z",
        "updated_at": "2024-01-27T10:20:45.541Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 1972,
            "code_problem_id": 641,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution {\n  public:\n  string removeDuplicateLetters(string s){",
            "skeleton_class_end": "}\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 1982,
            "code_problem_id": 641,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public String removeDuplicateLetters(String s) {",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 1984,
            "code_problem_id": 641,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def removeDuplicateLetters(self, s):",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 1985,
            "code_problem_id": 641,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    removeDuplicateLetters(s) {",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        }
    ]
}