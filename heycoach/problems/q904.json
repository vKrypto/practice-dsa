{
    "id": 904,
    "description": "Given an array of `n` integers **nums**, a **magic pattern** is a subsequence of three integers `nums[i], nums[j] and nums[k]` such that `i < j < k` and `nums[i] < nums[k] < nums[j]`. Return *true if there is a **margic pattern** in **nums**, otherwise, return false.*\n\n\n**Example 1:**\n```\nInput: n = 4, nums = [1,2,3,4]\n\nOutput: false\n\nExplanation: There is no magic pattern in the sequence.\n```\n**Example 2:**\n```\nInput: n = 4, nums = [3,1,4,2]\n\nOutput: true\n\nExplanation: There is a magic pattern in the sequence: [1, 4, 2].\n```\n\n**Example 3:**\n```\nInput: n = 4, nums = [-1,3,2,0]\n\nOutput: true\n\nExplanation: There are three magic patterns in the sequence: [-1, 3, 2], [-1, 3, 0] and [-1, 2, 0].\n ```\n**Input Format**\n```\nFirst line contains the integer n denoting length of the array\nSecond line contains n space separated integers denoting the array nums\n```\n**Output Format**\n```\nA single Boolean (0 or 1)  denoting if there is a magic pattern or not\n```\n**Constraints:**\n\n`n == nums.length`\n\n`1 <= n <= 2 * 10^5`\n\n`-10^9 <= nums[i] <= 10^9`",
    "title": "Can You Find The Magic Pattern?",
    "default_testcase": {
        "id": 8053,
        "input": "4\n1 2 3 4",
        "expected_output": "0\n",
        "code_problem_id": 904,
        "created_at": "2024-05-18T16:24:21.712Z",
        "updated_at": "2024-05-18T16:24:21.712Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 3009,
            "code_problem_id": 904,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution{\npublic:\n\n   int magicPattern(int n, vector<int>& nums) {",
            "skeleton_class_end": "}\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 3010,
            "code_problem_id": 904,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public int magicPattern(int n, int[] nums) {",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 3011,
            "code_problem_id": 904,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def magicPattern(self, n, nums):",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 3012,
            "code_problem_id": 904,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    magicPattern(n, nums) {",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        }
    ]
}