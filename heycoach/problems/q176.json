{
    "id": 176,
    "description": "\nYou are given an array `arr` consisting of `N` integers and a positive integer `K`. You need to find the **maximum** element for each subarray of size K starting from leftmost subarray to the the rightmost.\n\n### Example 1 \n\n### Input\n```CPP\narr = [1,3,-1,-3,5,3,6,7], K = 3\n```\n\n\n### Output \n```CPP\n[3,3,5,5,6,7]\n```\n### Explanation\n\n[1  3  -1] -3  5  3  6  7 => **3** (max of (1,3,-1))\n 1 [3  -1  -3] 5  3  6  7  =>**3**\n 1  3 [-1  -3  5] 3  6  7 =>  **5**\n 1  3  -1 [-3  5  3] 6  7 =>**5**\n 1  3  -1  -3 [5  3  6] 7 =>**6**\n 1  3  -1  -3  5 [3  6  7] => **7**\n\n**Example 2:**\n\n**Input:**\n```CPP\narr = [1,2,3], k = 3\n```\n**Output:** \n```CPP\n[3]\n```\n### Explanation\n[1,2,3] => 3\n\n\n### Constraints:\n* `1 <= K <= N <= 10000`\n*  `-10000 <= arr[i] <= 10000`\n",
    "title": "Sliding window maximum",
    "default_testcase": {
        "id": 1256,
        "input": "8 3\n1 3 -1 -3 5 3 6 7",
        "expected_output": "3 3 5 5 6 7 ",
        "code_problem_id": 176,
        "created_at": "2022-10-25T11:59:26.566Z",
        "updated_at": "2022-10-25T11:59:26.566Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 248,
            "code_problem_id": 176,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\npublic:\n    vector<int> maxSlidingWindow(vector<int>& nums, int k) {\n      // write your code here\n    }\n};\n"
        }
    ]
}