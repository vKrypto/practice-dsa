{
    "id": 247,
    "description": "\nGiven an integer num, return three consecutive integers (as a sorted array) that sum to num. If num cannot be expressed as the `sum` of three consecutive integers, return an `empty` array.\n\n### Example 1\n\n### Input\n\n```CPP\nnum = 33\n```\n\n### Output\n\n```CPP\n[10,11,12]\n```\n\n#### Explanation -\n\n33 can be expressed as 10 + 11 + 12 = 33.\n10, 11, 12 are 3 consecutive integers, so we return [10, 11, 12].\n\n### Example 2\n\n### Input\n\n```CPP\nnum = 4\n```\n\n### Output\n\n```CPP\n[]\n```\n\n#### Explanation -\n\nThere is no way to express 4 as the sum of 3 consecutive integers.\n\n### Constraints:\n\n- 0 <= num <= 10^15\n",
    "title": "Find Sum",
    "default_testcase": {
        "id": 1743,
        "input": "9647515136415",
        "expected_output": "3215838378804 3215838378805 3215838378806",
        "code_problem_id": 247,
        "created_at": "2022-11-03T14:22:40.524Z",
        "updated_at": "2022-11-03T14:22:40.524Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 412,
            "code_problem_id": 247,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\npublic:\n    vector<long long> sumOfThree(long long num) {\n       // write your code here\n    }\n};\n"
        }
    ]
}