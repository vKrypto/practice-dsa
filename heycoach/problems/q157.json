{
    "id": 157,
    "description": "You want to water  `n`  plants in your garden with a watering can. The plants are arranged in a row and are labeled from  `0`  to  `n - 1`  from left to right where the  `ith`  plant is located at  `x = i`. There is a river at  `x = -1`  that you can refill your watering can at.\n\nEach plant needs a specific amount of water. You will water the plants in the following way:\n\n-   Water the plants in order from left to right.\n-   After watering the current plant, if you do not have enough water to  **completely**  water the next plant, return to the river to fully refill the watering can.\n-   You  **cannot**  refill the watering can early.\n\nYou are initially at the river (i.e.,  `x = -1`). It takes  **one step**  to move  **one unit**  on the x-axis.\n\nGiven a  **0-indexed**  integer array  `plants`  of  `n`  integers, where  `plants[i]`  is the amount of water the  `ith`  plant needs, and an integer  `capacity`  representing the watering can capacity, return  _the  **number of steps**  needed to water all the plants_.\n\n### Example 1 \n\n### Input\n```CPP\nplants = [2,2,3,3], capacity = 5\n```\n\n\n### Output \n```CPP\n14\n```\n\n#### Explanation:\nStart at the river with a full watering can:\n- Walk to plant 0 (1 step) and water it. Watering can has 3 units of water.\n- Walk to plant 1 (1 step) and water it. Watering can has 1 unit of water.\n- Since you cannot completely water plant 2, walk back to the river to refill (2 steps).\n- Walk to plant 2 (3 steps) and water it. Watering can has 2 units of water.\n- Since you cannot completely water plant 3, walk back to the river to refill (3 steps).\n- Walk to plant 3 (4 steps) and water it.\nSteps needed = 1 + 1 + 2 + 3 + 3 + 4 = 14.\n\n**Example 2:**\n\n**Input:**\n```CPP\nplants = [1,1,1,4,2,3], capacity = 4\n```\n**Output:** \n```CPP\n30\n```\n#### Explanation:\nStart at the river with a full watering can:\n- Water plants 0, 1, and 2 (3 steps). Return to river (3 steps).\n- Water plant 3 (4 steps). Return to river (4 steps).\n- Water plant 4 (5 steps). Return to river (5 steps).\n- Water plant 5 (6 steps).\nSteps needed = 3 + 3 + 4 + 4 + 5 + 5 + 6 = 30.\n\n### Constraints:\n-   `n == plants.length`\n-   `1 <= n <= 10000`\n-   `1 <= plants[i] <= 10000`\n-   `max(plants[i]) <= capacity <= 10000`",
    "title": "Gardening",
    "default_testcase": {
        "id": 1129,
        "input": "4\n2 2 3 3\n5",
        "expected_output": "14",
        "code_problem_id": 157,
        "created_at": "2022-10-22T10:06:45.933Z",
        "updated_at": "2022-10-22T10:06:45.933Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 211,
            "code_problem_id": 157,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\npublic:\n    int wateringPlants(vector<int>& plants, int capacity) {\n      // write your code here\n    }\n};"
        }
    ]
}