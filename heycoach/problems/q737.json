{
    "id": 737,
    "description": "A new classmate has come today and his name is represented by a string 's'. His name is pretty random and contains only lowercase Latin letters. You and your classmates have started playing a game based on his name. The game is simple whoever finds the greatest lexicographically arranged sequence from string 's' wins. For example if his name is \"dhananjay\", the winner would be the one who says 5 and the greatest lexicographically arranged sequence would be \"dhnny\".\nGiven string 's' calculate the size of greatest lexicographically arranged sequence and return the result.\n\nInput Format:\n\nA single integer 'n' denoting the size of string.\n\nSecond line contains a string 's' of size n.\n\nOutput format:\n\nReturn a single integer denoting the size of greatest lexicographically arranged sequence\n\nSample Input:\n\n6\n\nklepto\n\nSample Output:\n\n4\n\nExplanation: The sequence \"klpt\" which has 4 characters is the maximum possible answer.\n\nconstraints:\n\n1<=n<=10^3",
    "title": "The new classmate",
    "default_testcase": {
        "id": 5427,
        "input": "6\nklepto",
        "expected_output": "4\n",
        "code_problem_id": 737,
        "created_at": "2024-02-12T16:03:41.453Z",
        "updated_at": "2024-02-12T16:03:41.453Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 2357,
            "code_problem_id": 737,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution{\n    public:\n    int solve(int n, string &s){\n        //Write your code here;",
            "skeleton_class_end": "}\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 2358,
            "code_problem_id": 737,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def solve(self, n, s):\n      #Write your code here;",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 2359,
            "code_problem_id": 737,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    solve(n, s) {\n      //Write your code here;",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 2360,
            "code_problem_id": 737,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public int solve(int n, String s) {\n      //Write your code here;",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        }
    ]
}