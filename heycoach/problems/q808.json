{
    "id": 808,
    "description": "Description:\n\nYou are given an array profits representing the profits of n projects. Each project has a corresponding capital capital[i], which denotes the amount of capital required to start the project. Additionally, you are given an initial capital initialCapital.\nYou can start a project only when you have the required capital. Once a project is completed, you will gain its corresponding profit. You can choose at most k projects to maximize your total profit. However, you can only complete a project once.\nWrite a function to calculate the maximum profit you can achieve with the given initialCapital by selecting and completing at most k projects.\nIf it is impossible to complete k projects with the given initialCapital, return 0;\n\n```\nInput Format:\n\nThe input consists of four lines:\nThe first line contains an integer n, representing the number of projects.\n\nThe second line contains n space-separated integers, representing the profits of each project.\n\nThe third line contains n space-separated integers, representing the capital required for each project.\n\nThe fourth line contains an integer initialCapital, representing the initial capital.\n\nThe fifth line contains an integer k, representing the maximum number of projects that can be completed.\n\nOutput Format:\n\nA single integer representing the maximum profit achievable\n```\n\n```\nSample Inputs:\n\nprofits = [1, 2, 3]\n\ncapital = [0, 1, 1]\n\ninitialCapital = 0\n\nk = 2\n\nSample Outputs:\n\n4\n```\n\nExplanation:\n\nYou start with an initial capital of 0. Since the initial capital is sufficient to start projects with capital 0, you can start both projects with capital 0 and 1. You complete projects with capital 1 and 1, gaining profits 2 and 3 respectively. Thus, the total profit is 2 + 3 = 5. However, since you can select at most 2 projects, you choose the ones with the maximum profit. So, the maximum profit is 2 + 3 = 5.\n\n\nConstraint:\n\n1 <= n <= 10^5\n\n0 <= profits[i] <= 10^4\n\n0 <= capital[i] <= 10^9\n\n0 <= initialCapital <= 10^9\n\n1 <= k <= 10^5\n",
    "title": "Maximum Profit with Capital",
    "default_testcase": null,
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 2701,
            "code_problem_id": 808,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def findMaximizedCapital(self, k, initialCapital, profits, capital):\n      #Write your code here",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 2702,
            "code_problem_id": 808,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "class Solution {\npublic:\n    int findMaximizedCapital(int k, int initialCapital, vector<int>& profits, vector<int>& capital) {\n      //Write your code here",
            "skeleton_class_end": "    }\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 2703,
            "code_problem_id": 808,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    public int findMaximizedCapital(int k, int initialCapital, int[] profits, int[] capital) {\n      //Write your code here",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 2704,
            "code_problem_id": 808,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public int findMaximizedCapital(int k, int initialCapital, int[] profits, int[] capital) {\n      //Write your code here",
            "skeleton_class_end": "    }\n}",
            "skeleton_solution_class": ""
        }
    ]
}