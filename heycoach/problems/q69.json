{
    "id": 69,
    "description": "There is one meeting room in a firm. There are N meetings in the form of (start[i], end[i]) where start[i] is start time of meeting i and end[i] is finish time of meeting i.\nWhat is the **maximum** number of meetings that can be accommodated in the meeting room when **only one** meeting can be held in the meeting room at a particular time?\n\n**Note**: Start time of one chosen meeting can't be equal to the end time of the other chosen meeting.\n\n### Example 1 \n\n### Input\n```CPP\nstart[] = {1,3,0,5,8,5}\nend[] =  {2,4,6,7,9,9}\n``` \n### Output \n```CPP \n4\n``` \n#### Explanation:\nMaximum four meetings can be held with given start and end timings.The meetings are - (1, 2),(3, 4), (5,7) and (8,9)\n### Example 2 \n\n### Input\n```CPP\nstart[] = {10, 12, 20}\nend[] = {20, 25, 30}\n``` \n### Output \n```CPP \n1\n``` \n#### Explanation:\nOnly one meetings can be held with given start and end timings.\n### Constraints:\n\n* 1 <= start.length == end.length <= 10000\n* 0 <= start[i] <= end[i] <= 1000000000\n",
    "title": "Maximum meetings in one room",
    "default_testcase": {
        "id": 479,
        "input": "6\n1 3 0 5 8 5\n2 4 6 7 9 9",
        "expected_output": "4\n",
        "code_problem_id": 69,
        "created_at": "2022-09-30T11:15:55.510Z",
        "updated_at": "2022-09-30T11:15:55.510Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 112,
            "code_problem_id": 69,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "class Solution {\npublic:\n\tint maxMeetings(int start[], int end[], int n)\n\t{\n      // write your code here\n\t}\n};"
        },
        {
            "id": 481,
            "code_problem_id": 69,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": null,
            "skeleton_class_end": null,
            "skeleton_solution_class": "\nclass Solution {\n    public int maxMeetings(int[] start, int[] end, int n) {\n      // write your code here\n    }\n}\n"
        }
    ]
}