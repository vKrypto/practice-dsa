{
    "id": 682,
    "description": "Given an adjacency list of a graph **adj** of n number of vertices and m edges having 0 based index. Check whether the graph is bipartite or not.\nA graph is said to be bipartite if we can color the nodes of the graph using two colors such that **no two adjacent nodes will have same color**. \n\n### Example 1 \n\n### Input\n[![bipartitie-graph-tc1.png](https://i.postimg.cc/QCgVJSy0/bipartitie-graph-tc1.png)](https://postimg.cc/SYsyyLqM)\n### Output \n```CPP \n1\n``` \n#### Explanation:\n The given graph can be colored in two colors such that no two adjacent nodes will have same color, so, it is a bipartite graph.\n### Example 2 \n\n### Input\n[![bipartite-graph-tc2.png](https://i.postimg.cc/brRkwzpy/bipartite-graph-tc2.png)](https://postimg.cc/ZvCCfzW2)\n### Output \n```CPP \n0\n``` \n#### Explanation:\nThe given graph cannot be colored  in two colors such that color of adjacent vertices differs.\n### Constraints:\n\n* 1 <= n,m <= 100",
    "title": "Bipartite graph",
    "default_testcase": {
        "id": 4487,
        "input": "7 7\n2 0\n0 1\n1 3\n3 6\n6 5\n5 4\n4 0",
        "expected_output": "1\n",
        "code_problem_id": 682,
        "created_at": "2024-01-27T18:38:30.987Z",
        "updated_at": "2024-01-27T18:38:30.987Z"
    },
    "problem_type": "practice",
    "code_skeletons": [
        {
            "id": 2125,
            "code_problem_id": 682,
            "language": {
                "id": 11,
                "name": "C++ (GCC 9.2.0)",
                "judge0_language_id": 54
            },
            "skeleton_define_class": "\n\nclass Solution {\npublic:\n    bool isBipartite(int n, vector<vector<int>>& adj) {",
            "skeleton_class_end": "}\n};",
            "skeleton_solution_class": ""
        },
        {
            "id": 2126,
            "code_problem_id": 682,
            "language": {
                "id": 25,
                "name": "Java (OpenJDK 13.0.1)",
                "judge0_language_id": 62
            },
            "skeleton_define_class": "class Solution {\n    public boolean isBipartite(int n, List<List<Integer>> adj) {",
            "skeleton_class_end": "      }\n}",
            "skeleton_solution_class": ""
        },
        {
            "id": 2127,
            "code_problem_id": 682,
            "language": {
                "id": 39,
                "name": "Python (3.8.1)",
                "judge0_language_id": 71
            },
            "skeleton_define_class": "class Solution:\n    def isBipartite(self, n, adj):",
            "skeleton_class_end": "",
            "skeleton_solution_class": ""
        },
        {
            "id": 2128,
            "code_problem_id": 682,
            "language": {
                "id": 26,
                "name": "JavaScript (Node.js 12.14.0)",
                "judge0_language_id": 63
            },
            "skeleton_define_class": "class Solution {\n    isBipartite(n, adj) {",
            "skeleton_class_end": "}\n}",
            "skeleton_solution_class": ""
        }
    ]
}